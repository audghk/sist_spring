/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-14 16:33:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.resume.category;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class career_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div class=\"formWrap formWrapCareer\" id=\"formCareer\" style=\"\">\r\n");
      out.write("	<div class=\"header\">\r\n");
      out.write("		<h2 class=\"header\">경력</h2>\r\n");
      out.write("		<div class=\"term\" style=\"display: none\">\r\n");
      out.write("			<span id=\"spn_Career_Term_Year\">0</span> 년 <span\r\n");
      out.write("				id=\"spn_Career_Term_Month\">0</span> 개월\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"options\"></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"form formCareer\">\r\n");
      out.write("		<div id=\"career_containers\">\r\n");
      out.write("			<!-- content will be added -->\r\n");
      out.write("		</div>\r\n");
      out.write("		<button type=\"button\" class=\"button buttonAddField\">\r\n");
      out.write("			<img src=\"http://localhost/recruit-app/assets/images/btns/plus_btn.png\"\" style=\"width: 25px; height: 25px;\"/>\r\n");
      out.write("			<span>추가</span>\r\n");
      out.write("		</button>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/template\" id=\"tplCareerItem\">\r\n");
      out.write("<div class=\"container container3\">\r\n");
      out.write("	<div class=\"row\">\r\n");
      out.write("		<input type=\"hidden\" name=\"Career.index\" value=\"c14\" /> \r\n");
      out.write("		<input type=\"hidden\" name=\"Career[c14].Index_Name\" value=\"c14\" />\r\n");
      out.write("		<div class=\"input input-career-name is-label\">\r\n");
      out.write("			<label for=\"Career_C_Name_c14\">회사명 <span class=\"star\">*</span></label> \r\n");
      out.write("			<input type=\"text\" id=\"Career_C_Name_c14\"data-type=\"Co_Name\" value=\"\" maxlength=\"50\" autocomplete=\"off\" />\r\n");
      out.write("			<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("			<div class=\"autocomplete hidden\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input input-career-part is-label\">\r\n");
      out.write("			<label for=\"Career_C_Part_c14\">부서명</label>\r\n");
      out.write("			<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("			<input type=\"text\" name=\"Career[c14].C_Part\" id=\"Career_C_Part_c14\" value=\"\" maxlength=\"25\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input input-career-joindate is-label\">\r\n");
      out.write("			<label for=\"Career_CSYM_c14\">입사년월 <span class=\"star\">*</span></label> \r\n");
      out.write("			<input type=\"text\" name=\"Career[c14].CSYM\" id=\"Career_CSYM_c14\" value=\"\" data-format-type=\"month\" placeholder=\"2016.03\" />\r\n");
      out.write("			<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input input-career-leavedate is-label\">\r\n");
      out.write("			<label for=\"Career_CEYM_c14\">퇴사년월 <span class=\"star\">*</span></label> \r\n");
      out.write("			<input type=\"text\" name=\"Career[c14].CEYM\" id=\"Career_CEYM_c14\" value=\"\" data-format-type=\"month\" class=\"devCareerCEYM\" placeholder=\"2016.06\" />\r\n");
      out.write("			<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input input-career-duty is-label\">\r\n");
      out.write("			<label>직급</label> \r\n");
      out.write("			<input type=\"text\" name=\"position_field\" id=\"Career_position_field\" value=\"\" maxlength=\"7\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"input input-career-salary is-label salaryInput\">\r\n");
      out.write("			<label for=\"Career_M_MainPay_User_c14\">연봉</label> \r\n");
      out.write("			<input type=\"text\" name=\"Career[c14].M_MainPay_User\" id=\"Career_M_MainPay_User_c14\" value=\"\" data-format-type=\"price\" maxlength=\"7\" />\r\n");
      out.write("			<div class=\"unit hidden\" aria-hidden=\"true\">만원</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"row workInputRow\">\r\n");
      out.write("		<div class=\"textarea is-label workInput\">\r\n");
      out.write("			<label for=\"lbl_o_experience_contents\">담당업무</label>\r\n");
      out.write("			<textarea name=\"Career[c14].Prfm_Prt\" cols=\"30\" rows=\"2\" id=\"Career_Prfm_Prt_c14\" class=\"textarea-career\" placeholder=\"담당하신 업무와 성과에 대해 간단명료하게 적어주세요.\" style=\"height: 40px\"></textarea>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<button type=\"button\" class=\"button buttonDeleteField\"></button>\r\n");
      out.write("</div>\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/template\" id=\"tplCompanyAutoComplete\"></script>\r\n");
      out.write("<script type=\"text/template\" id=\"tplCompanyNotFound\"></script>\r\n");
      out.write("<script type=\"text/template\" id=\"tplSelectedKeywordNew\"></script>\r\n");
      out.write("<script type=\"text/template\" id=\"tplKeywordAutocomplete\"></script>\r\n");
      out.write("<script type=\"text/template\" id=\"tplFrgnWorkItem\"></script>\r\n");
      out.write("<script type=\"text/template\" id=\"tplSelectedJobType\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://localhost/recruit-app/assets/js/user/resume/career1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://localhost/recruit-app/assets/js/user/resume/career2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://localhost/recruit-app/assets/js/user/resume/career3.js\"></script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
