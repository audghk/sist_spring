/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-13 15:42:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage.qna;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class new_005fqnas_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/lib.jsp", out, false);
      out.write("\n");
      out.write("<link href=\"https://i.jobkorea.kr/content/css/ver_2/event/banner.promotion-sv-202401301659.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<link href=\"https://i.jobkorea.kr/content/css/ver_2/common-sv-202405271315.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<link href=\"https://i.jobkorea.kr/deploy/pc/dist/css/personal/common/gnb-sv-202405231305.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<link href=\"https://i.jobkorea.kr/content/css/ver_2/mtc/mtc_lounge-sv-202402231655.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<link href=\"https://i.jobkorea.kr/content/css/ver_2/help/help-sv-202402231655.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<link href=\"https://i.jobkorea.kr/deploy/pc/dist/css/personal/layout/footer-sv-202405131313.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<link href=\"https://i.jobkorea.kr/deploy/pc/dist/css/personal/pages/main/auto_search-sv-202405231305.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("	#newQnaFrm{margin-left:300px; margin-right:40px}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(function(){\n");
      out.write("    	$(\"#qna_menu\").addClass(\"bg-gradient-primary\");\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("<!-- golgolz start -->\n");
      out.write("<!-- golgolz end -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/header.jsp", out, false);
      out.write("\n");
      out.write("	<main\n");
      out.write("		class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg ps ps--active-y\">\n");
      out.write("		<nav\n");
      out.write("			class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\n");
      out.write("			id=\"navbarBlur\" data-scroll=\"true\">\n");
      out.write("			<div class=\"container-fluid py-1 px-3\">\n");
      out.write("				<nav aria-label=\"breadcrumb\">\n");
      out.write("					<ol\n");
      out.write("						class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\n");
      out.write("						<li class=\"breadcrumb-item text-sm\"><a\n");
      out.write("							class=\"opacity-5 text-dark\" href=\"javascript:;\">\n");
      out.write("							관리자 기능</a></li>\n");
      out.write("						<!-- 하단의 대시보드 텍스트를 본인 기능으로 변경 필요  -->\n");
      out.write("						<li class=\"breadcrumb-item text-sm text-dark active\"\n");
      out.write("							aria-current=\"page\">문의 관리</li>\n");
      out.write("					</ol>\n");
      out.write("					<h6 class=\"font-weight-bolder mb-0\">문의 관리</h6>\n");
      out.write("				</nav>\n");
      out.write("			</div>\n");
      out.write("		</nav>\n");
      out.write("	</main>\n");
      out.write("	<!-- golgolz start -->\n");
      out.write("	<div>\n");
      out.write("	<section class=\"content helpSecCont\">\n");
      out.write("		<div class=\"loungeContent inquiryContent\" id=\"newQnaFrm\">\n");
      out.write("		<div class=\"topHdWrap\">\n");
      out.write("		<!-- <h2 class=\"lug_hd_2\">문의</h2> -->\n");
      out.write("		</div>\n");
      out.write("		<!--// tap menu -->\n");
      out.write("		<div class=\"mtcTplTab\" >\n");
      out.write("			<ul class=\"tabItems\">\n");
      out.write("			<li class=\"\"><a href=\"qnas.jsp\">문의 내역</a></li>\n");
      out.write("			<li class=\"on\"><a href=\"new_qnas_list.jsp\">새로운 문의</a></li>\n");
      out.write("			</ul>\n");
      out.write("		</div>\n");
      out.write("		<!-- tap menu //-->\n");
      out.write("\n");
      out.write("		<!--// 내 제안내역 보기 -->\n");
      out.write("		<div class=\"inquiryListWrap\">\n");
      out.write("		<!--// List 시작 -->\n");
      out.write("		<div class=\"schListWrap\">\n");
      out.write("			<div class=\"mtcSchListTb\">\n");
      out.write("			<!--[개발] 문의 내용이 없는 경우 hide 처리 -->\n");
      out.write("			<table summary=\"내 제안내역 보기 목록으로 글번호, 내용, 날짜, 답변여부로 구성되어 있습니다.\">\n");
      out.write("			<caption>내 제안내역 보기</caption>\n");
      out.write("			<colgroup>\n");
      out.write("				<col class=\"col_1\">\n");
      out.write("				<col class=\"col_2\">\n");
      out.write("				<col class=\"col_3\">\n");
      out.write("				<col class=\"col_4\">\n");
      out.write("			</colgroup>\n");
      out.write("			<thead class=\"blind\">\n");
      out.write("				<tr>\n");
      out.write("				<th scope=\"col\">글번호</th>\n");
      out.write("				<th scope=\"col\">내용</th>\n");
      out.write("				<th scope=\"col\">날짜</th>\n");
      out.write("				<th scope=\"col\">답변여부</th>\n");
      out.write("				</tr>\n");
      out.write("			</thead>\n");
      out.write("			<tbody>\n");
      out.write("				<tr>\n");
      out.write("				<td>79483</td>\n");
      out.write("				<td class=\"alLeft\"><span class=\"tit\"><a href=\"new_qna_detail.jsp\">기업 리뷰는 어떻게 확인하는지 궁금합니다.</a></span></td>\n");
      out.write("				<td>2024.05.24</td>\n");
      out.write("				<td class=\"\">답변대기</td>\n");
      out.write("				</tr>\n");
      out.write("				</tbody>\n");
      out.write("				</table>\n");
      out.write("		<div class=\"listBtmArea\">\n");
      out.write("		<div class=\"tplPagination\">\n");
      out.write("   		<div class=\"tplPagination\">\n");
      out.write("        <ul>\n");
      out.write("           <li><span class=\"now\">1</span></li>\n");
      out.write("        </ul>\n");
      out.write("    </div>\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("	<!-- List 끝 //-->\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("	<!-- golgolz end -->\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
