/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-10 07:55:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.manage.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class review_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dev/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/recruit-app/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1716272562048L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.13.3/themes/base/jquery-ui.css\">\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/lib.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.3/jquery-ui.js\"></script>\r\n");
      out.write("<script src=\"http://localhost/recruit-app/assets/js/admin/datepicker-ko.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    $(function(){\r\n");
      out.write("        $(\"#review_menu\").addClass(\"bg-gradient-primary\");\r\n");
      out.write("        \r\n");
      out.write("        // 리뷰 행 클릭 시 상세 페이지로 이동\r\n");
      out.write("        $('.list').on('click', 'tr', function() {\r\n");
      out.write("            var reviewNum = $(this).data('review-num');\r\n");
      out.write("            window.location.href = '/recruit-app/manage/review/reviewUpdate.do?reviewNum=' + reviewNum;\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 초기화 버튼 클릭 이벤트 핸들러\r\n");
      out.write("        $(\"#btn-reset\").click(function(){\r\n");
      out.write("            window.location.href = window.location.pathname;\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // JSON 데이터를 파싱하여 테이블에 추가하는 함수\r\n");
      out.write("    function loadReviews(reviewListJson, page = 1, itemsPerPage = 8) {\r\n");
      out.write("        console.log(\"loadReviews called with reviewListJson:\", reviewListJson);\r\n");
      out.write("        const reviews = JSON.parse(reviewListJson);\r\n");
      out.write("        const reviewListTable = document.querySelector('.list');\r\n");
      out.write("\r\n");
      out.write("        reviewListTable.innerHTML = ''; // 기존 리스트 초기화\r\n");
      out.write("\r\n");
      out.write("        const startIndex = (page - 1) * itemsPerPage;\r\n");
      out.write("        const endIndex = page * itemsPerPage;\r\n");
      out.write("        const paginatedReviews = reviews.slice(startIndex, endIndex);\r\n");
      out.write("\r\n");
      out.write("        paginatedReviews.forEach((review, index) => {\r\n");
      out.write("            console.log(\"Adding review:\", review); // 디버그 로그 추가\r\n");
      out.write("            const row = document.createElement('tr');\r\n");
      out.write("            row.setAttribute('data-review-num', review.reviewNum);\r\n");
      out.write("\r\n");
      out.write("            const reviewNumCell = document.createElement('td');\r\n");
      out.write("            reviewNumCell.textContent = startIndex + index + 1;\r\n");
      out.write("            row.appendChild(reviewNumCell);\r\n");
      out.write("\r\n");
      out.write("            const userIdCell = document.createElement('td');\r\n");
      out.write("            userIdCell.textContent = review.userId;\r\n");
      out.write("            row.appendChild(userIdCell);\r\n");
      out.write("\r\n");
      out.write("            const authorCell = document.createElement('td');\r\n");
      out.write("            authorCell.textContent = review.author;\r\n");
      out.write("            row.appendChild(authorCell);\r\n");
      out.write("\r\n");
      out.write("            const titleCell = document.createElement('td');\r\n");
      out.write("            titleCell.textContent = review.title;\r\n");
      out.write("            row.appendChild(titleCell);\r\n");
      out.write("\r\n");
      out.write("            const inputDateCell = document.createElement('td');\r\n");
      out.write("            inputDateCell.textContent = review.inputDate;\r\n");
      out.write("            row.appendChild(inputDateCell);\r\n");
      out.write("\r\n");
      out.write("            const recommendCell = document.createElement('td');\r\n");
      out.write("            recommendCell.textContent = review.recommend;\r\n");
      out.write("            row.appendChild(recommendCell);\r\n");
      out.write("\r\n");
      out.write("            const deleteFlagCell = document.createElement('td');\r\n");
      out.write("            deleteFlagCell.textContent = review.deleteFlag;\r\n");
      out.write("            row.appendChild(deleteFlagCell);\r\n");
      out.write("\r\n");
      out.write("            reviewListTable.appendChild(row);\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        updatePagination(reviews.length, page, itemsPerPage);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function updatePagination(totalItems, currentPage, itemsPerPage) {\r\n");
      out.write("        const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n");
      out.write("        const paginationUl = document.querySelector('.pagination');\r\n");
      out.write("        paginationUl.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write("        const prevPageLi = document.createElement('li');\r\n");
      out.write("        prevPageLi.className = 'page-items';\r\n");
      out.write("        const prevPageLink = document.createElement('a');\r\n");
      out.write("        prevPageLink.className = 'page-link';\r\n");
      out.write("        prevPageLink.href = '#';\r\n");
      out.write("        prevPageLink.setAttribute('aria-label', 'Previous');\r\n");
      out.write("        prevPageLink.innerHTML = '<span aria-hidden=\"true\">&laquo;</span>';\r\n");
      out.write("        prevPageLink.onclick = function (e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            if (currentPage > 1) {\r\n");
      out.write("                loadReviews(window.reviewListJson, currentPage - 1, itemsPerPage);\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        prevPageLi.appendChild(prevPageLink);\r\n");
      out.write("        paginationUl.appendChild(prevPageLi);\r\n");
      out.write("\r\n");
      out.write("        for (let i = 1; i <= totalPages; i++) {\r\n");
      out.write("            const pageLi = document.createElement('li');\r\n");
      out.write("            pageLi.className = 'page-items';\r\n");
      out.write("            const pageLink = document.createElement('a');\r\n");
      out.write("            pageLink.className = 'page-link';\r\n");
      out.write("            pageLink.href = '#';\r\n");
      out.write("            pageLink.textContent = i;\r\n");
      out.write("            pageLink.setAttribute('data-page', i);\r\n");
      out.write("            pageLink.onclick = function (e) {\r\n");
      out.write("                e.preventDefault();\r\n");
      out.write("                loadReviews(window.reviewListJson, i, itemsPerPage);\r\n");
      out.write("            };\r\n");
      out.write("            pageLi.appendChild(pageLink);\r\n");
      out.write("            paginationUl.appendChild(pageLi);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        const nextPageLi = document.createElement('li');\r\n");
      out.write("        nextPageLi.className = 'page-items';\r\n");
      out.write("        const nextPageLink = document.createElement('a');\r\n");
      out.write("        nextPageLink.className = 'page-link';\r\n");
      out.write("        nextPageLink.href = '#';\r\n");
      out.write("        nextPageLink.setAttribute('aria-label', 'Next');\r\n");
      out.write("        nextPageLink.innerHTML = '<span aria-hidden=\"true\">&raquo;</span>';\r\n");
      out.write("        nextPageLink.onclick = function (e) {\r\n");
      out.write("            e.preventDefault();\r\n");
      out.write("            if (currentPage < totalPages) {\r\n");
      out.write("                loadReviews(window.reviewListJson, currentPage + 1, itemsPerPage);\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        nextPageLi.appendChild(nextPageLink);\r\n");
      out.write("        paginationUl.appendChild(nextPageLi);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    window.onload = function() {\r\n");
      out.write("        window.reviewListJson = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewListJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("        console.log(\"window.onload called with reviewListJson:\", window.reviewListJson);\r\n");
      out.write("        if (window.reviewListJson) {\r\n");
      out.write("            loadReviews(window.reviewListJson);\r\n");
      out.write("        }\r\n");
      out.write("    };\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- golgolz start -->\r\n");
      out.write("\r\n");
      out.write("<link href=\"http://localhost/recruit-app/assets/css/pagenation.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"http://localhost/recruit-app/assets/css/manage/order/admin.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"http://localhost/recruit-app/assets/css/manage/order/reset.css\" rel=\"stylesheet\" />\r\n");
      out.write("<!-- golgolz end -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <main\r\n");
      out.write("        class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg ps ps--active-y\">\r\n");
      out.write("        <nav\r\n");
      out.write("            class=\"navbar navbar-main navbar-expand-lg px=0 mx-4 shadow-none border-radius-xl\"\r\n");
      out.write("            id=\"navbarBlur\" data-scroll=\"true\">\r\n");
      out.write("            <div class=\"container-fluid py-1 px-3\">\r\n");
      out.write("                <nav aria-label=\"breadcrumb\">\r\n");
      out.write("                    <ol\r\n");
      out.write("                        class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\r\n");
      out.write("                        <li class=\"breadcrumb-item text-sm\"><a\r\n");
      out.write("                            class=\"opacity-5 text-dark\" href=\"javascript:;\">\r\n");
      out.write("                            관리자 기능</a></li>\r\n");
      out.write("                        <!-- 하단의 대시보드 텍스트를 본인 기능으로 변경 필요  -->\r\n");
      out.write("                        <li class=\"breadcrumb-item text-sm text-dark active\"\r\n");
      out.write("                            aria-current=\"page\">리뷰 관리</li>\r\n");
      out.write("                    </ol>\r\n");
      out.write("                    <h6 class=\"font-weight-bolder mb-0\">리뷰 관리</h6>\r\n");
      out.write("                </nav>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("            <!-- golgolz start -->\r\n");
      out.write("            <div class=\"s_wrap\">\r\n");
      out.write("        <form name=\"fsearch\" id=\"fsearch\" method=\"get\" onsubmit=\"return handleFormSubmit(event);\" action=\"/recruit-app/manage/review/review.do\">\r\n");
      out.write("    <input type=\"hidden\" name=\"code\" value=\"list\">\r\n");
      out.write("    <div class=\"tbl_frm01\">\r\n");
      out.write("        <table>\r\n");
      out.write("            <colgroup>\r\n");
      out.write("                <col class=\"w100\">\r\n");
      out.write("                <col>\r\n");
      out.write("            </colgroup>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th scope=\"row\">검색어</th>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        <select name=\"sfl\">\r\n");
      out.write("                            <option value=\"id\" ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write(">아이디</option>\r\n");
      out.write("                            <option value=\"name\" ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write(">회원명</option>\r\n");
      out.write("                            <option value=\"titleOrContent\" ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write(">제목 또는 내용</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                        <input type=\"text\" name=\"stx\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.stx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" class=\"frm_input\" size=\"30\">\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"btn_confirm\">\r\n");
      out.write("        <input type=\"submit\" value=\"검색\" class=\"btn btn-secondary btn-sm\">\r\n");
      out.write("        <input type=\"button\" value=\"초기화\" class=\"btn btn-outline-secondary btn-sm\" id=\"btn-reset\">\r\n");
      out.write("    </div>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"local_ov mart30\">\r\n");
      out.write("            총 리뷰 수 : <b class=\"fc_red\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewList != null ? reviewList.size() : 0}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</b>건\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"tbl_head01\">\r\n");
      out.write("            <table>\r\n");
      out.write("                <thead>\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 50px;\">번호</th>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 50px;\">아이디</th>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 50px;\">작성자</th>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 150px;\">제목</th>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 130px;\">작성일</th>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 60px;\">추천수</th>\r\n");
      out.write("                        <th scope=\"col\" style=\"width: 60px;\">삭제여부</th>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody class=\"list\">\r\n");
      out.write("                    <!-- 리뷰 리스트가 여기에서 동적으로 추가됩니다. -->\r\n");
      out.write("                </tbody>\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div style=\"margin-top: 40px; justify-content: center;\">\r\n");
      out.write("            <nav aria-label=\"Page navigation example\">\r\n");
      out.write("                <ul class=\"pagination\" style=\"justify-content: center;\">\r\n");
      out.write("                    <!-- 페이지네이션 아이템들이 여기에 동적으로 추가됩니다. -->\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    <!-- golgolz end -->\r\n");
      out.write("    </main>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/manage/review/review.jsp(195,47) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.sfl == 'id'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("selected");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/manage/review/review.jsp(196,49) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.sfl == 'name'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("selected");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /WEB-INF/views/manage/review/review.jsp(197,59) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.sfl == 'titleOrContent'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("selected");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
