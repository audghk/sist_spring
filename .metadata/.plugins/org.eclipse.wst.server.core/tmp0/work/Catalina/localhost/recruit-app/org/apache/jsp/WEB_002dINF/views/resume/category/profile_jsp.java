/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-14 16:33:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.resume.category;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div class=\"formWrap formWrapProfile\">\r\n");
      out.write("	<h2 class=\"header\">\r\n");
      out.write("		인적사항\r\n");
      out.write("		<div class=\"description\">\r\n");
      out.write("			<span class=\"star\">*</span> 필수 입력 정보입니다.\r\n");
      out.write("		</div>\r\n");
      out.write("	</h2>\r\n");
      out.write("	<div class=\"form formProfile\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"input is-label input-profile-name is-value\">\r\n");
      out.write("				<label for=\"UserInfo_M_Name\">이름 <span class=\"star\">*</span></label>\r\n");
      out.write("				<input type=\"text\" class=\"dev-essential\" name=\"UserInfo.M_Name\" id=\"UserInfo_M_Name\" value=\"우미연\" data-format-type=\"name\" />\r\n");
      out.write("				<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"input is-label input-profile-birth is-value\">\r\n");
      out.write("				<label for=\"UserInfo_M_Born\">생년월일 <span class=\"star\">*</span></label> \r\n");
      out.write("				<input class=\"dev-essential\" data-format-type=\"birth\" data-max-date=\"2009.06.01\" data-val=\"true\" data-val-date=\"생년월일 필드는 날짜여야 합니다.\" id=\"UserInfo_M_Born\"name=\"UserInfo.M_Born\" placeholder=\"1988.03.01\" type=\"text\" value=\"1996-08-21\" />\r\n");
      out.write("				<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"dropdown dropdown-profile-sex is-label selected\">\r\n");
      out.write("				<div class=\"label\" aria-hidden=\"true\">성별 <span class=\"star\">*</span>\r\n");
      out.write("				</div>\r\n");
      out.write("				<select class=\"button buttonChoose dev-essential\" id=\"genderSelect\" style=\"font-size: 16px; padding: 0px 15px; padding-top: 15px;\">\r\n");
      out.write("					<option value=\"여자\" style=\"font-size: 16px;\">여자</option>\r\n");
      out.write("					<option value=\"남자\" style=\"font-size: 16px;\">남자</option>\r\n");
      out.write("				</select>\r\n");
      out.write("				<!-- <div class=\"validation hidden\" aria-hidden=\"true\">성별을 입력해주세요</div>\r\n");
      out.write("				<input class=\"dev-essential\" id=\"UserInfo_M_Gender\" name=\"UserInfo.M_Gender\" type=\"hidden\" value=\"True\" /> -->\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"input input-profile-email is-label is-value\">\r\n");
      out.write("				<label for=\"UserInfo_M_Email\">이메일 <span class=\"star\">*</span></label>\r\n");
      out.write("				<input type=\"email\" name=\"UserInfo.M_Email\" id=\"UserInfo_M_Email\" data-format-type=\"email\" value=\"yeon.dev.8@gmail.com\" autocomplete=\"off\" spellcheck=\"false\" class=\"dev-essential\" data-privacy=\"이메일\" />\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"input is-label input-profile-tel is-value\">\r\n");
      out.write("				<label for=\"UserInfo_M_Hand_Phone\">전화번호 <span class=\"star\">*</span></label> \r\n");
      out.write("				<input type=\"text\" name=\"UserInfo.M_Hand_Phone\" id=\"UserInfo_M_Hand_Phone\" placeholder=\"010-1234-1234\" value=\"010-1234-1234\" maxlength=\"30\" autocomplete=\"off\" data-format-type=\"hp\" class=\"dev-essential\" />\r\n");
      out.write("				<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"input is-label input-profile-hp is-value\">\r\n");
      out.write("				<label for=\"UserInfo_M_Hand_Phone\">휴대폰번호 <span class=\"star\">*</span></label> \r\n");
      out.write("				<input type=\"text\" name=\"UserInfo.M_Hand_Phone\" id=\"UserInfo_M_Hand_Phone\" placeholder=\"010-1234-1234\" value=\"010-1234-1234\" maxlength=\"30\" autocomplete=\"off\" data-format-type=\"hp\" class=\"dev-essential\" />\r\n");
      out.write("				<div class=\"validation hidden\" aria-hidden=\"true\"></div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"input is-label input-profile-addr\"> \r\n");
      out.write("				<label for=\"temp_M_Addr_Text\">주소</label> \r\n");
      out.write("				<!-- <input type=\"text\" id=\"temp_M_Addr_Text\" class=\"dev-optional\" data-privacy=\"주소\" />  -->\r\n");
      out.write("				<div style=\"height: 60px; position:absolute; top:10px; left: 60px;\">\r\n");
      out.write("					<select name=\"sido1\" id=\"sido1\" style=\"width: 250px; height: 40px; font-size: 15px; border: 0px; border-bottom: 0.5px solid #c8c8c8; margin-right: 15px;\"></select>\r\n");
      out.write("					<select name=\"gugun1\" id=\"gugun1\" style=\"width: 250px; height: 40px; font-size: 15px; border: 0px; border-bottom: 0.5px solid #c8c8c8;\"></select>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"picture dropped\" style=\"\">\r\n");
      out.write("			<div class=\"guide\">사진추가</div>\r\n");
      out.write("			<a href=\"javascript:;\" class=\"buttonAddFile\"> 사진등록 </a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
