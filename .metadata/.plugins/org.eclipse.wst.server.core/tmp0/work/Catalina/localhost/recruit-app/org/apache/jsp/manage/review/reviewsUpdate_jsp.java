/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-15 15:44:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reviewsUpdate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/lib.jsp", out, false);
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(function(){\n");
      out.write("    	$(\"#review_menu\").addClass(\"bg-gradient-primary\");\n");
      out.write("	});\n");
      out.write("</script>\n");
      out.write("<!-- golgolz start -->\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://img.echosting.cafe24.com/editors/froala/css/froala_style_ec.min.css?vs=2404251303\" charset=\"utf-8\"/>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://insideobject.com/ind-script/optimizer.php?filename=nZExDgIxDAT7KC3vsOAJPIEfOMFwJxJv5DgS_J6jggYJ0o52doulBVVofzBqhqtxJZOOYVko904Xgzpl1AqNG9jRL3nJoaMMX6Eh4T4pDvfZ0cIPsTnVORWZVNFCWVVCYtWv-9waHcF2ptNn3YZjeuGYCvJtVjZpMP_Pft_7BA&type=css&k=ecd691e0c80070ef935d0e961272742f67437a3c&t=1681776733\"  />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"https://insideobject.com/ind-script/optimizer_user.php?filename=tZRNbgMhDIX3M932HE5U5R6VegJgnMGKwQjDpLl9aVL1Z9uBHcboe9bTw-AlIKCbq2JWYDojG3t4ORwhVcvkZl8Cgy44L6i0RtALxeMJnCoEWSojWDF5gWumgq_GXcyKT637DP9Fs7lJLWCNkrvrOAlBYmfo46IzFN3UCpwqDQIXES6UBtE98ih0yi0sbpTfyawUTcFRrhs7iGxrKd2j_Q2X93GG8Ciz2zO3D72cWSRD4tpS0aop40Z4_TkNmrw1MO9j_1qrXzKhtg-vXtKbp5Qorr0FnMStMUhi2ul7kIxxuz00eiztv0DVT9oH&type=css&k=2ac0432e370996de85bc64830c9b818c88b32f75&t=1678165953&user=T\"  />\n");
      out.write("\n");
      out.write("<link rel=\"canonical\" href=\"https://insideobject.com/board/product/write.html\" />\n");
      out.write("<link rel=\"alternate\" href=\"https://m.insideobject.com/board/product/write.html\" />\n");
      out.write("<!-- golgolz end -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/header.jsp", out, false);
      out.write("\n");
      out.write("	<main\n");
      out.write("		class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg ps ps--active-y\">\n");
      out.write("		<nav\n");
      out.write("			class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\n");
      out.write("			id=\"navbarBlur\" data-scroll=\"true\">\n");
      out.write("			<div class=\"container-fluid py-1 px-3\">\n");
      out.write("				<nav aria-label=\"breadcrumb\">\n");
      out.write("					<ol\n");
      out.write("						class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\n");
      out.write("						<li class=\"breadcrumb-item text-sm\"><a\n");
      out.write("							class=\"opacity-5 text-dark\" href=\"javascript:;\">\n");
      out.write("							관리자 기능</a></li>\n");
      out.write("						<!-- 하단의 대시보드 텍스트를 본인 기능으로 변경 필요  -->\n");
      out.write("						<li class=\"breadcrumb-item text-sm text-dark active\"\n");
      out.write("							aria-current=\"page\">리뷰 관리</li>\n");
      out.write("					</ol>\n");
      out.write("					<h5 class=\"font-weight-bolder mb-0\">리뷰 관리</h5>\n");
      out.write("				</nav>\n");
      out.write("			</div>\n");
      out.write("		</nav>\n");
      out.write("	\n");
      out.write("			<section class=\"Section_Section__P1hhc\">\n");
      out.write("			<!-- golgolz start -->\n");
      out.write("			<div>\n");
      out.write("<hr class=\"layout\"/>\n");
      out.write("    \n");
      out.write("\n");
      out.write("    <div id=\"container\">\n");
      out.write("		<div id=\"contents\">\n");
      out.write("		\n");
      out.write("	");

	request.setCharacterEncoding("UTF-8");
	
      out.write("\n");
      out.write("		\n");
      out.write("</div>\n");
      out.write("<form id=\"frmWrite\" name=\"frmWrite\" action=\"review_write_process.jsp\" method=\"get\" target=\"_self\" enctype=\"multipart/form-data\" >\n");
      out.write("<input id=\"board_no\" name=\"board_no\" value=\"4\" type=\"hidden\"  />\n");
      out.write("<input id=\"product_no\" name=\"product_no\" value=\"6027\" type=\"hidden\"  />\n");
      out.write("<input id=\"move_write_after\" name=\"move_write_after\" value=\"/product/detail.html?board_no=4&amp;product_no=6027&amp;cate_no=428&amp;display_group=1&amp;keyword=\" type=\"hidden\"  />\n");
      out.write("<input id=\"cate_no\" name=\"cate_no\" value=\"428\" type=\"hidden\"  />\n");
      out.write("<input id=\"bUsePassword\" name=\"bUsePassword\" value=\"\" type=\"hidden\"  />\n");
      out.write("<input id=\"order_id\" name=\"order_id\" value=\"\" type=\"hidden\"  />\n");
      out.write("<input id=\"is_post_checked\" name=\"is_post_checked\" value=\"\" type=\"hidden\"  />\n");
      out.write("<input id=\"isExceptBoardUseFroalaImg\" name=\"isExceptBoardUseFroalaImg\" value=\"\" type=\"hidden\"  />\n");
      out.write("<input id=\"isGalleryBoard\" name=\"isGalleryBoard\" value=\"\" type=\"hidden\"  />\n");
      out.write("<input id=\"c6\" name=\"c6\" value=\"429218e799694a4b1ce711e01de9690d\" type=\"hidden\"  />\n");
      out.write("<input type=\"hidden\" name=\"code\" value=\"SAMSUNG_S24_1\"/>\n");
      out.write("<input type=\"hidden\" name=\"cartId\" value=\"20240419131320\"/>\n");
      out.write("<div class=\"xans-element- xans-board xans-board-write-4 xans-board-write xans-board-4\">\n");
      out.write("</form>\n");
      out.write("<div class=\"ec-base-box typeProduct  \">\n");
      out.write("            <p class=\"thumbnail\"><a href=\"\"><img id=\"iPrdIm\" src=\"http://localhost/assets/images/goods/<c:out value=''/>\" onerror=\"this.src='//img.echosting.cafe24.com/thumb/75x75.gif'\" alt=\"\"/></a></p>\n");
      out.write("            <div class=\"information\" style=\"padding-left:30px\">\n");
      out.write("				<h3><a href=\"#void\" id=\"aPrdNameLink\">\n");
      out.write("				<span id=\"sPrdName\"></span></a></h3>\n");
      out.write("                <p class=\"button\">\n");
      out.write("                </p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("<div class=\"ec-base-table typeWrite \">\n");
      out.write("            <table border=\"1\" summary=\"\">\n");
      out.write("<caption>글쓰기 폼</caption>\n");
      out.write("            <colgroup>\n");
      out.write("<col style=\"width:130px;\"/>\n");
      out.write("<col style=\"width:auto;\"/>\n");
      out.write("</colgroup>\n");
      out.write("<tbody>\n");
      out.write("<tr>\n");
      out.write("<th scope=\"row\">제목</th>\n");
      out.write("                    <td> <input id=\"title\" name=\"title\" fw-filter=\"isFill\" fw-label=\"제목\" fw-msg=\"\" class=\"inputTypeText\" placeholder=\"\" value=\"\" maxLength=\"125\" type=\"text\"  />  </td>\n");
      out.write("                </tr>\n");
      out.write("<tr>\n");
      out.write("<td colspan=\"2\" class=\"clear\">\n");
      out.write("                        \n");
      out.write("            <!-- CSS -->\n");
      out.write("            <link rel=\"stylesheet\" href=\"https://img.echosting.cafe24.com/editors/froala/3.2.2/css/froala_editor.pkgd.min.css?vs=2404180600\">\n");
      out.write("            <link rel=\"stylesheet\" href=\"https://img.echosting.cafe24.com/editors/froala/css/themes/ec_froala.css?vs=2404180600\">\n");
      out.write("\n");
      out.write("            <!-- HTML -->\n");
      out.write("            <textarea style=\"width: 100%;\" name=\"content\" id=\"content\" class=\"ec-fr-never-be-duplicated\"></textarea>\n");
      out.write("                <input type=\"hidden\" id=\"content_hidden\" fw-filter=\"isSimplexEditorFill\" fw-label=\"내용\" value=\"EC_FROALA_INSTANCE\" />\n");
      out.write("                \n");
      out.write("            <!-- JavaScript -->\n");
      out.write("            <script type=\"text/javascript\" src=\"https://img.echosting.cafe24.com/editors/froala/js/polyfill.min.js?vs=2404180600\"></script>\n");
      out.write("            <script type=\"text/javascript\" src=\"https://img.echosting.cafe24.com/editors/froala/3.2.2/js/froala_editor.pkgd.min.js?vs=2404180600\"></script>\n");
      out.write("            <script type=\"text/javascript\" src=\"https://img.echosting.cafe24.com/editors/froala/js/i18n/ko_KR.js?vs=2404180600\"></script>\n");
      out.write("        \n");
      out.write("            <script>\n");
      out.write("                if (FroalaEditor.PLUGINS && FroalaEditor.PLUGINS.url) delete FroalaEditor.PLUGINS.url; // ECHOSTING-518735\n");
      out.write("            </script>\n");
      out.write("        \n");
      out.write("            <!-- Run Froala Script -->\n");
      out.write("            <script>\n");
      out.write("              var EC_FROALA_ID = null;\n");
      out.write("              // isSimplexEditorFill 체크시에 필요함\n");
      out.write("              var EC_FROALA_INSTANCE = null;\n");
      out.write("              // scroll 버그 대응을 위해 필요.\n");
      out.write("              var fScrollPosition = 0;\n");
      out.write("              // 다중 이미지 삽입시 생기는 버그 대응\n");
      out.write("              var iCheckedImageListCount  = 0;\n");
      out.write("              var aCheckedImageList = [];\n");
      out.write("              var aInsertedImageList = [];\n");
      out.write("              var isBeforeImageRemove = false;\n");
      out.write("              \n");
      out.write("              (function() {\n");
      out.write("                var d = \"\";\n");
      out.write("                try {\n");
      out.write("                    var o = {\"key\":\"DUA2yF3G1E1A5A2A2pZGCTRSAPJWTLPLZHTQQe1JGZxC4B3A3E2B5A1E1E4I1C2==\",\"toolbarSticky\":false,\"theme\":\"ec-froala\",\"attribution\":false,\"htmlRemoveTags\":[\"script\"],\"htmlAllowedEmptyTags\":[\"*\"],\"iframe\":true,\"iframeStyle\":\".fr-view{font-size: 12px;}\",\"iframeStyleFiles\":[\"\\/\\/img.echosting.cafe24.com\\/editors\\/froala\\/css\\/froala_style.min.css?vs=2404171300\"],\"heightMin\":400,\"language\":\"ko_KR\",\"paragraphFormatSelection\":true,\"fontFamilySelection\":true,\"fontSize\":[\"8\",\"9\",\"10\",\"12\",\"14\",\"16\",\"18\",\"20\",\"22\",\"24\",\"26\",\"28\",\"30\"],\"fontSizeSelection\":true,\"linkInsertButtons\":[\"linkBack\"],\"quickInsertButtons\":[\"ul\",\"ol\",\"hr\"],\"codeMirror\":false,\"entities\":\"&#60;&#62;\",\"imageEditButtons\":[\"imageAlign\",\"imageRemove\",\"|\",\"imageLink\",\"linkOpen\",\"linkEdit\",\"linkRemove\",\"-\",\"imageDisplay\",\"imageStyle\",\"imageAlt\",\"imageSize\"],\"tableEditButtons\":[],\"tableInsertHelper\":false,\"imageDefaultMargin\":0,\"imageDefaultWidth\":0,\"imageUpload\":false,\"imageInsertButtons\":[\"imageUpload\"],\"imageMaxSize\":5242880,\"filesManagerMaxSize\":5242880,\"toolbarButtons\":{\"moreText\":{\"buttons\":[\"paragraphFormat\",\"fontFamily\",\"fontSize\",\"bold\",\"italic\",\"underline\",\"strikeThrough\",\"textColor\",\"backgroundColor\",\"subscript\",\"superscript\",\"clearFormatting\"],\"buttonsVisible\":5},\"moreParagraph\":{\"buttons\":[\"formatOL\",\"formatUL\",\"alignLeft\",\"alignCenter\",\"alignRight\",\"outdent\",\"indent\",\"alignJustify\",\"lineHeight\"],\"buttonsVisible\":5},\"moreRich\":{\"buttons\":[\"insertTable\",\"insertHR\",\"emoticons\",\"specialCharacters\"],\"buttonsVisible\":0},\"moreMisc\":{\"buttons\":[\"undo\",\"redo\",\"fullscreen\",\"html\",\"print\",\"spellChecker\",\"selectAll\"],\"align\":\"right\",\"buttonsVisible\":2}},\"toolbarButtonsSM\":{\"moreText\":{\"buttons\":[\"paragraphFormat\",\"fontFamily\",\"fontSize\",\"bold\",\"italic\",\"underline\",\"strikeThrough\",\"textColor\",\"backgroundColor\",\"subscript\",\"superscript\",\"clearFormatting\"],\"buttonsVisible\":4},\"moreParagraph\":{\"buttons\":[\"formatOL\",\"formatUL\",\"alignLeft\",\"alignCenter\",\"alignRight\",\"outdent\",\"indent\",\"alignJustify\",\"lineHeight\"],\"buttonsVisible\":2},\"moreRich\":{\"buttons\":[\"insertTable\",\"insertHR\",\"emoticons\",\"specialCharacters\"],\"buttonsVisible\":0},\"moreMisc\":{\"buttons\":[\"undo\",\"redo\",\"fullscreen\",\"html\",\"print\",\"spellChecker\",\"selectAll\"],\"align\":\"right\",\"buttonsVisible\":2}},\"toolbarButtonsXS\":{\"moreText\":{\"buttons\":[\"paragraphFormat\",\"textColor\",\"backgroundColor\",\"bold\",\"italic\",\"underline\",\"strikeThrough\"],\"buttonsVisible\":1},\"moreParagraph\":{\"buttons\":[\"formatOL\",\"formatUL\",\"alignLeft\",\"alignCenter\",\"alignRight\"],\"buttonsVisible\":0},\"moreRich\":{\"buttons\":[\"insertLink\"]},\"moreMisc\":{\"buttons\":[\"undo\",\"redo\",\"html\"],\"buttonsVisible\":0,\"align\":\"right\"}},\"htmlDoNotWrapTags\":[\"script\",\"style\",\"meta\",\"link\"],\"htmlAllowedStyleProps\":[\".*\"],\"htmlAllowedTags\":[\".*\"],\"htmlAllowedAttrs\":[\".*\"],\"fontFamily\":{\"Dotum,sans-serif\":\"Dotum\",\"Gulim,sans-serif\":\"Gulim\",\"Batang,sans-serif\":\"Batang\",\"Gungsuh,sans-serif\":\"Gungsuh\",\"Arial,Helvetica,sans-serif\":\"Arial\",\"Tahoma,Geneva,sans-serif\":\"Tahoma\",\"Verdana,Geneva,sans-serif\":\"Verdana\",\"Fixedsys,sans-serif\":\"Fixedsys\",\"'Times New Roman',Times,serif\":\"Times New Roman\",\"helvetica,sans-serif\":\"Helvetica\",\"sans-serif\":\"Sans-serif\",\"palatino,sans-serif\":\"Palatino\",\"'Comic Sans MS',sans-serif\":\"Comic Sans MS\",\"sand,sans-serif\":\"Sand\",\"'Courier New',sans-serif\":\"Courier New\",\"courier,sans-serif\":\"Courier\",\"monospace,sans-serif\":\"Monospace\",\"Georgia,serif\":\"Georgia\",\"SimSun,sans-serif\":\"SimSun\",\"SimHei,sans-serif\":\"SimHei\",\"'MS PGothic',sans-serif\":\"MS PGothic\",\"'MS PMincho',sans-serif\":\"MS PMincho\",\"'MS UI PGothic',sans-serif\":\"MS UI PGothic\",\"Meiryo,sans-serif\":\"Meiryo\"},\"colorsText\":[\"#FF0000\",\"#FF6C00\",\"#FFAA00\",\"#FFEF00\",\"#A6CF00\",\"#009E25\",\"#00B0A2\",\"#0075C8\",\"#3A32C3\",\"#7820B9\",\"#EF007C\",\"#000000\",\"#252525\",\"#464646\",\"#636363\",\"#7D7D7D\",\"#9A9A9A\",\"#FFE8E8\",\"#F7E2D2\",\"#F5EDDC\",\"#F5F4E0\",\"#EDF2C2\",\"#DEF7E5\",\"#D9EEEC\",\"#C9E0F0\",\"#D6D4EB\",\"#E7DBED\",\"#F1E2EA\",\"#ACACAC\",\"#C2C2C2\",\"#CCCCCC\",\"#E1E1E1\",\"#EBEBEB\",\"#FFFFFF\",\"#E97D81\",\"#E19B73\",\"#D1B274\",\"#CFCCA2\",\"#61B977\",\"#53AEA8\",\"#518FBB\",\"#6A65BB\",\"#9A54CE\",\"#E573AE\",\"#5A504B\",\"#767B86\",\"#951015\",\"#6E391A\",\"#785C25\",\"#5F5B25\",\"#4C511F\",\"#1C4827\",\"#0D514C\",\"#1B496A\",\"#2B285F\",\"#45245B\",\"#721947\",\"#352E2C\",\"#3C3F45\"],\"colorsBackground\":[\"#FF0000\",\"#FF6C00\",\"#FFAA00\",\"#FFEF00\",\"#A6CF00\",\"#009E25\",\"#00B0A2\",\"#0075C8\",\"#3A32C3\",\"#7820B9\",\"#EF007C\",\"#000000\",\"#252525\",\"#464646\",\"#636363\",\"#7D7D7D\",\"#9A9A9A\",\"#FFE8E8\",\"#F7E2D2\",\"#F5EDDC\",\"#F5F4E0\",\"#EDF2C2\",\"#DEF7E5\",\"#D9EEEC\",\"#C9E0F0\",\"#D6D4EB\",\"#E7DBED\",\"#F1E2EA\",\"#ACACAC\",\"#C2C2C2\",\"#CCCCCC\",\"#E1E1E1\",\"#EBEBEB\",\"#FFFFFF\",\"#E97D81\",\"#E19B73\",\"#D1B274\",\"#CFCCA2\",\"#61B977\",\"#53AEA8\",\"#518FBB\",\"#6A65BB\",\"#9A54CE\",\"#E573AE\",\"#5A504B\",\"#767B86\",\"#951015\",\"#6E391A\",\"#785C25\",\"#5F5B25\",\"#4C511F\",\"#1C4827\",\"#0D514C\",\"#1B496A\",\"#2B285F\",\"#45245B\",\"#721947\",\"#352E2C\",\"#3C3F45\"],\"docId\":\"content\"};\n");
      out.write("                    // IE tableEditbuttons 이슈\n");
      out.write("                    o[\"tableEditButtons\"] = FroalaEditor.DEFAULTS.tableEditButtons.filter(function(tableEditButtonName) {\n");
      out.write("                        return tableEditButtonName.indexOf(\"Style\") === -1;\n");
      out.write("                    });\n");
      out.write("\n");
      out.write("                    o[\"events\"] = {\n");
      out.write("                        \"filesManager.beforeUpload\": function(files) {\n");
      out.write("                            this.opts.filesManagerUploadURL = getConvertUrlBeforeUpload(this.opts.filesManagerUploadURL);\n");
      out.write("                        },\n");
      out.write("                        \"image.beforeUpload\": function(images) {\n");
      out.write("                            this.opts.imageUploadURL = getConvertUrlBeforeUpload(this.opts.imageUploadURL);\n");
      out.write("                        },\n");
      out.write("\n");
      out.write("                        \"image.inserted\": function(oImage, response) {\n");
      out.write("                            var sInstanceId = \"content\";\n");
      out.write("                            // 파일업로더로 이미지가 넘어오는경우에는 itslog가 이미 생성된 이미지기때문에 처리하지않음.\n");
      out.write("                            if ((sInstanceId === \"product_description\" || sInstanceId === \"product_description_mobile\") && typeof response !== \"undefined\") {\n");
      out.write("                                oImage.attr(\"data-use_its\", true);\n");
      out.write("                            }\n");
      out.write("                           \n");
      out.write("                            if (iCheckedImageListCount >= 0) {\n");
      out.write("                                iCheckedImageListCount++;\n");
      out.write("                                aInsertedImageList.push(oImage);\n");
      out.write("                                \n");
      out.write("                                if (aCheckedImageList.length === iCheckedImageListCount || aCheckedImageList.length === 0) {\n");
      out.write("                                    // 마지막 이미지\n");
      out.write("                                    for (var i = 0; i < aInsertedImageList.length; i++) {\n");
      out.write("                                        aInsertedImageList[i].after(\"<br>\");\n");
      out.write("                                    }\n");
      out.write("                                    \n");
      out.write("                                    // 리셋\n");
      out.write("                                    iCheckedImageListCount = 0;\n");
      out.write("                                    aCheckedImageList = [];\n");
      out.write("                                    aInsertedImageList = [];\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"image.error\": function (error, response) {\n");
      out.write("                            if (typeof JSON != \"undefined\") {\n");
      out.write("                                r = JSON.parse(response);\n");
      out.write("                                alert(r[\"error\"]);\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"image.loaded\": function($img) {\n");
      out.write("                            // IE에서 이미지 로드 후, 커서 위치 재조정\n");
      out.write("                            if (/(trident).+rv[:\\s]([\\w\\.]{1,9}).+like\\sgecko/i.test(navigator.userAgent)) {\n");
      out.write("                                var _this = this;\n");
      out.write("                                var _img = $img[0];\n");
      out.write("                                setTimeout(function() {\n");
      out.write("                                  _this.selection.setAfter(_img);\n");
      out.write("                                  _this.selection.restore();\n");
      out.write("                                }, 300);\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"filesManager.error\": function (error, response) {\n");
      out.write("                            if (typeof JSON != \"undefined\") {\n");
      out.write("                                r = JSON.parse(response);\n");
      out.write("                                alert(r[\"error\"]);\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"commands.before\": function(sCommand) {\n");
      out.write("                            // 코드뷰 토글시\n");
      out.write("                            if (sCommand === \"html\") {\n");
      out.write("                                var sContent = this.el.innerHTML;\n");
      out.write("                                sContent = sContent.replace(/<\\/?null>/gi, \"\");\n");
      out.write("                                this.el.innerHTML = getReplaceZeroWidthSpace(sContent);\n");
      out.write("                                replaceToFroalaNewLine(this);\n");
      out.write("                            }\n");
      out.write("                            \n");
      out.write("                            // 전체화면 모드 켜기\n");
      out.write("                            if (sCommand === \"fullscreen\" && !this.fullscreen.isActive()) {\n");
      out.write("                                this.$box[0].setAttribute(\"data-window-scroll-y\", window.scrollY || window.pageYOffset);\n");
      out.write("                            }\n");
      out.write("                            // 다중 이미지 삽입\n");
      out.write("                            if (sCommand === \"insertAll\") {\n");
      out.write("                                var popup = this.popups.get(\"filesManager.insert\");\n");
      out.write("                                aCheckedImageList = popup.find(\".fr-files-checkbox .fr-file-insert-check:checked\")\n");
      out.write("                            }\n");
      out.write("\n");
      out.write("                            if (sCommand === \"insertSpecialCharacter\") {\n");
      out.write("                                setScrollPosition(this, getIframeCursorPoint(this));\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"commands.after\": function(sCommand) {\n");
      out.write("                            if (sCommand === \"html\") {\n");
      out.write("                                removeFroalaNewLine(this);\n");
      out.write("                            }\n");
      out.write("                            \n");
      out.write("                            if (sCommand === \"insertFiles\") {\n");
      out.write("                                var enableButton= document.querySelector(\".fr-trim-button.fr-plugins-enable\");\n");
      out.write("                                if (enableButton) enableButton.click();\n");
      out.write("                            }\n");
      out.write("                            \n");
      out.write("                            if (sCommand === \"selectAll\") {\n");
      out.write("                                this.el.focus();\n");
      out.write("                            }\n");
      out.write("                            \n");
      out.write("                            // 전체 화면 토글시에 컨텐츠 높이를 정상적으로 반영하지못하는 이슈 대응\n");
      out.write("                            if (sCommand === \"fullscreen\") {\n");
      out.write("                                var _this = this;\n");
      out.write("                                setTimeout(function() {\n");
      out.write("                                    _this.size.syncIframe();\n");
      out.write("                                }, 300);\n");
      out.write("                                \n");
      out.write("                                if (this.fullscreen.isActive() === false) {\n");
      out.write("                                    window.scrollTo(0, this.$box[0].getAttribute(\"data-window-scroll-y\"));\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("                            \n");
      out.write("                            if (sCommand === \"insertSpecialCharacter\") {\n");
      out.write("                                this.$wp.get(0).scrollTop = fScrollPosition;\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"focus\": function() {\n");
      out.write("                            if (this.iframe_document) {\n");
      out.write("                                var iframeHeight = this.iframe_document.body.scrollHeight;\n");
      out.write("                                this.$iframe[0].style.height = iframeHeight + \"px\";\n");
      out.write("                            }\n");
      out.write("                            \n");
      out.write("                            this.el.innerHTML = getReplaceZeroWidthSpace(this.el.innerHTML);\n");
      out.write("                        },\n");
      out.write("\n");
      out.write("                        \"image.beforeRemove\": function(aImage) {\n");
      out.write("                            isBeforeImageRemove = true;\n");
      out.write("                            var cursorPoint = aImage[0].offsetTop; // 제거 대상 이미지의 offsetTop 값으로 정의\n");
      out.write("                            setScrollPosition(this, cursorPoint);\n");
      out.write("                        },\n");
      out.write("                        \"image.removed\": function() {\n");
      out.write("                            if (isBeforeImageRemove === true) {\n");
      out.write("                                this.$wp.get(0).scrollTop = fScrollPosition; // 에디터 자체 버그동작이 수행 된 후 계산 해 둔 값으로 스크롤 위치를 이동\n");
      out.write("                            }\n");
      out.write("                            isBeforeImageRemove = false;\n");
      out.write("                        },\n");
      out.write("                        \"keydown\": function(e) {\n");
      out.write("                            if (isScrollFix(this, e) === true) {\n");
      out.write("                                setScrollPosition(this, getIframeCursorPoint(this));\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"keyup\": function(e) {\n");
      out.write("                            if (isScrollFix(this, e) === true) {\n");
      out.write("                                this.$wp.get(0).scrollTop = fScrollPosition;\n");
      out.write("                            }\n");
      out.write("                        },\n");
      out.write("                        \"paste.before\": function() {\n");
      out.write("                            if (this.fullscreen.isActive() === false) {\n");
      out.write("                                setScrollPosition(this, getIframeCursorPoint(this));\n");
      out.write("                            } \n");
      out.write("                        },\n");
      out.write("                        \"paste.after\": function(e) {\n");
      out.write("                            if (this.fullscreen.isActive() === false) {\n");
      out.write("                                this.$wp.get(0).scrollTop = fScrollPosition;\n");
      out.write("                            } \n");
      out.write("                        },\n");
      out.write("                        \"codeView.update\": function() {\n");
      out.write("                            this.el.innerHTML = getReplaceZeroWidthSpace(this.el.innerHTML);\n");
      out.write("                            this.el.innerHTML = decodeUriAttribute(this.el.innerHTML);\n");
      out.write("                        }\n");
      out.write("                    };\n");
      out.write("\n");
      out.write("                    EC_FROALA_INSTANCE = new FroalaEditor(\"textarea#content.ec-fr-never-be-duplicated\", o, function() {\n");
      out.write("                        EC_FROALA_ID = this.id;\n");
      out.write("                        if (d != \"\") {\n");
      out.write("                            this.el.innerHTML = this.clean.html(d);\n");
      out.write("                            // 타겟 textarea 태그에 change 트리거링\n");
      out.write("                            this.undo.saveStep();\n");
      out.write("                        }\n");
      out.write("                        var script = document.createElement(\"script\");\n");
      out.write("                        script.src = \"//img.echosting.cafe24.com/editors/froala/js/polyfill.min.js?vs=2404171300\";\n");
      out.write("                        this.$iframe.get(0).contentWindow.document.head.appendChild(script);\n");
      out.write("                        if (this.el.innerHTML === \"<br>\") {\n");
      out.write("                            this.el.innerHTML = \"<p><br></p>\";\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("\n");
      out.write("                    EC_FROALA_INSTANCE.$iframe[0].setAttribute(\"id\", \"content\" + \"_IFRAME\");\n");
      out.write("                    EC_FROALA_INSTANCE.$iframe[0].contentWindow.document.body.setAttribute(\"id\", \"content\" + \"_BODY\");\n");
      out.write("\n");
      out.write("                    EC_FROALA_INSTANCE.isEmptyContent = function () {\n");
      out.write("                        var c = getContentFromFroala(this.id);\n");
      out.write("                        // 스페이스바만 입력 저장시, validation을 위해 처리\n");
      out.write("                        var val = c.replace(/\\<br\\/?\\>|\\<\\/?p\\>|\\s|&nbsp;/gi, \"\");\n");
      out.write("                        if (\"\" == val) return true;\n");
      out.write("                        return false;\n");
      out.write("                    };\n");
      out.write("\n");
      out.write("                    EC_FROALA_INSTANCE.getContentFromFroala = function() {\n");
      out.write("                        return getContentFromFroala(this.id);\n");
      out.write("                    };\n");
      out.write("\n");
      out.write("                    EC_FROALA_INSTANCE.applyContentToFroala = function(content) {\n");
      out.write("                        return applyContentToFroala(content, this.id);\n");
      out.write("                    };\n");
      out.write("\n");
      out.write("                    EC_FROALA_INSTANCE.setValueBeforeSubmit = function(sSection) {\n");
      out.write("                        return setValueBeforeSubmit(sSection, this.id);\n");
      out.write("                    };\n");
      out.write("\n");
      out.write("                    if (typeof $Editor ===  \"undefined\") {\n");
      out.write("                        $Editor = {};\n");
      out.write("                    }\n");
      out.write("                    $Editor[\"content\"] = EC_FROALA_INSTANCE;\n");
      out.write("                } catch (e) {\n");
      out.write("                    document.getElementById(\"content\").value = d;\n");
      out.write("                    console.error(e);\n");
      out.write("                } finally {\n");
      out.write("                }\n");
      out.write("              })();\n");
      out.write("              \n");
      out.write("              function decodeUriAttribute(content) {\n");
      out.write("                  return content.replace(/(?:href=|src=)(?:\"([^\"]+)|'([^']+))[^>]/g, function (match, p1, p2) {\n");
      out.write("                      var p = p1 ? p1 : p2;\n");
      out.write("                      if (/%20|\\s|%3A/g.test(p)) {\n");
      out.write("                          try {\n");
      out.write("                              return match.replace(p, decodeURIComponent(p).trim());\n");
      out.write("                          } catch (e) {\n");
      out.write("                              return match;\n");
      out.write("                          }\n");
      out.write("                      } else {\n");
      out.write("                          return match;\n");
      out.write("                      }\n");
      out.write("                  });\n");
      out.write("              }\n");
      out.write("\n");
      out.write("\n");
      out.write("            // 스크롤 위치 수정해야하는지 확인\n");
      out.write("            function isScrollFix (oEditor, event) {\n");
      out.write("                if (oEditor.fullscreen.isActive() === true) {\n");
      out.write("                    return false;\n");
      out.write("                }\n");
      out.write("                var sKey = event.key.toUpperCase();\n");
      out.write("                var bResult = false;\n");
      out.write("                if (sKey === \"ENTER\") {\n");
      out.write("                    // 구문의 중간 지점의 엔터 입력만 요구 조건에 해당함\n");
      out.write("                    bResult = oEditor.selection.get().focusNode !== oEditor.$el.get(0);\n");
      out.write("                } else if (sKey === \"BACKSPACE\" || sKey === \"DELETE\") {\n");
      out.write("                    bResult = true;\n");
      out.write("                }\n");
      out.write("                return bResult;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            // 스크롤 위치 수정\n");
      out.write("            function setScrollPosition (oEditor, fCursorPoint) {\n");
      out.write("                var oContentWrapper = oEditor.$wp.get(0); // 에디터 편집 영역 컨테이너\n");
      out.write("                var fStartPoint = oContentWrapper.scrollTop; // 보여지는 편집 영역의 시작 지점\n");
      out.write("                var fEndPoint = oContentWrapper.scrollTop + (oContentWrapper.clientHeight - 20); // 보여지는 편집 영역의 끝 지점 (여백 포함)\n");
      out.write(" \n");
      out.write("                if (fCursorPoint > 0 && fCursorPoint < fStartPoint) {\n");
      out.write("                    // 커서가 보여지는 영역보다 위에 위치\n");
      out.write("                    fScrollPosition = fCursorPoint;\n");
      out.write("                } else if (fCursorPoint > 0 && fCursorPoint > fEndPoint) {\n");
      out.write("                    // 커서가 보여지는 영역보다 아래에 위치\n");
      out.write("                    fScrollPosition = fCursorPoint - (oContentWrapper.clientHeight - 20); // 여백 포함\n");
      out.write("                } else {\n");
      out.write("                    // 값이 0 이라서 무효화 됐거나, 보여지는 영역에 있는 경우 - 위치를 그대로 유지\n");
      out.write("                    fScrollPosition = fStartPoint;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            // 커서 포인트 반환\n");
      out.write("            function getIframeCursorPoint(editor) {\n");
      out.write("                var iframeDocument = editor.$iframe.get(0).contentDocument;\n");
      out.write("                var anchorNode = iframeDocument.getSelection().anchorNode;\n");
      out.write("                var iframeRange = iframeDocument.createRange();\n");
      out.write("                iframeRange.selectNode(anchorNode);\n");
      out.write("                return iframeRange.getBoundingClientRect().top;\n");
      out.write("            }\n");
      out.write("   \n");
      out.write("            // 폭없는 공백에서 폭과 줄바꿈 없는 공백으로 치환 (폭없는 공백은 플로알라버그로인해 지원하지않음)\n");
      out.write("            function getReplaceZeroWidthSpace(sContent) {\n");
      out.write("                return sContent.replace(/\\u200B/g, \"&#65279;\");\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            // \\n 제거되는 사양에대한 대응 : 플로알라에서 코드뷰 토글시 줄바꿈되는 태그로 변경\n");
      out.write("            function replaceToFroalaNewLine(oEditor) {\n");
      out.write("                if (oEditor.codeView.isActive() === true) {\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                var oWhiteSpacePreElements = oEditor.$el.get(0).querySelectorAll('*[style*=\"white-space: pre\"], *[style*=\"white-space:pre\"]');\n");
      out.write("                for (var iIndex = 0; iIndex < oWhiteSpacePreElements.length; iIndex++) {\n");
      out.write("                    oWhiteSpacePreElements[iIndex].innerHTML = oWhiteSpacePreElements[iIndex].innerHTML.replace(/\\n/g, '<span class=\"fr-newline\"></span>');\n");
      out.write("                }\n");
      out.write("            }            \n");
      out.write("            \n");
      out.write("            // \\n 제거되는 사양에대한 대응 : 코드뷰 토글시 줄바꿈 태그 \\n으로 변경\n");
      out.write("            function removeFroalaNewLine(oEditor) {\n");
      out.write("                if (oEditor.codeView.isActive() === false) {\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                var sCodeViewValue;\n");
      out.write("                if (typeof oEditor.opts.codeMirror === \"function\") {\n");
      out.write("                    // 상품 등록/수정 에디터는 코드미러를 사용하기때문에 분기처리\n");
      out.write("                    sCodeViewValue = oEditor.$wp.get(0).querySelector(\".CodeMirror\").CodeMirror.getValue();\n");
      out.write("                    oEditor.$wp.get(0).querySelector(\".CodeMirror\").CodeMirror.setValue(sCodeViewValue.replace(/<span class=[',\"]fr-newline[',\"]><\\/span>/g, '\\n'));\n");
      out.write("                } else {\n");
      out.write("                    sCodeViewValue = oEditor.$wp.get(0).querySelector(\".fr-code\").value;\n");
      out.write("                    oEditor.$wp.get(0).querySelector(\".fr-code\").value = sCodeViewValue.replace(/<span class=[',\"]fr-newline[',\"]><\\/span>/g, '\\n');\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            </script>                    </td>\n");
      out.write("                </tr>\n");
      out.write("</tbody>\n");
      out.write("</table>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"ec-base-button \">\n");
      out.write("                <input type=\"button\" class=\"btnSubmitFix sizeS\" id=\"btnDelete\" style=\"float : left\" value=\"삭제\"/>\n");
      out.write("            <span class=\"gRight\">\n");
      out.write("                <input type=\"button\" class=\"btnSubmitFix sizeS\" id=\"btnUpdate\" value=\"수정\"/>\n");
      out.write("                <a href=\"/board/review/4/\" class=\"btnBasicFix sizeS\">취소</a>\n");
      out.write("            </span>\n");
      out.write("        </div>\n");
      out.write("      \n");
      out.write("</div>\n");
      out.write("			<!-- golgolz end -->\n");
      out.write("			</section>\n");
      out.write("		</main>\n");
      out.write("	\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
