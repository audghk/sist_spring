/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-14 17:14:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.manage.recruit;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dev/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/recruit-app/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1716272562048L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://code.jquery.com/ui/1.13.3/themes/base/jquery-ui.css\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/lib.jsp", out, false);
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.3/jquery-ui.js\"></script>\r\n");
      out.write("<script src=\"http://localhost/recruit-app/assets/js/admin/datepicker-ko.js\"></script>\r\n");
      out.write("<!-- golgolz start -->\r\n");
      out.write("<link href=\"http://localhost/recruit-app/assets/css/manage/goods/general.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"http://localhost/recruit-app/assets/css/manage/goods/goods.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"http://localhost/recruit-app/assets/css/manage/goods/default.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://localhost/recruit-app/assets/css/manage/recruit/recruit.css\">\r\n");
      out.write("<style>\r\n");
      out.write("input[type=\"number\"]::-webkit-outer-spin-button,\r\n");
      out.write("input[type=\"number\"]::-webkit-inner-spin-button {\r\n");
      out.write("    -webkit-appearance: none;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var selectedPositions = [];\r\n");
      out.write("	var selectedWorkDay = \"주5일(월-금)\";\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\"#recruit_menu\").addClass(\"bg-gradient-primary\");\r\n");
      out.write("\r\n");
      out.write("		$('#summernote').summernote({\r\n");
      out.write("			tabsize : 2,\r\n");
      out.write("			height : 300\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("    	$(\"#end_date\").datepicker({\r\n");
      out.write("    		showOtherMonths: true,\r\n");
      out.write("    	    selectOtherMonths: true,\r\n");
      out.write("    	    showButtonPanel: true,\r\n");
      out.write("    	    dateFormat: \"yy-mm-dd\"\r\n");
      out.write("    	});\r\n");
      out.write("\r\n");
      out.write("		$(\".position-chip\").click(function() {\r\n");
      out.write("	        var value = $(this).data(\"value\");\r\n");
      out.write("			var index = selectedPositions.indexOf(value);\r\n");
      out.write("\r\n");
      out.write("	        if (index === -1) {\r\n");
      out.write("	            selectedPositions.push(value);\r\n");
      out.write("	            $(this).addClass(\"active\");\r\n");
      out.write("	        } else {\r\n");
      out.write("	            selectedPositions.splice(index, 1);\r\n");
      out.write("	            $(this).removeClass(\"active\");\r\n");
      out.write("	        }\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$(\".work-day-chip\").click(function() {\r\n");
      out.write("			$('.work-day-chip').removeClass('active');\r\n");
      out.write("			$(this).toggleClass(\"active\");\r\n");
      out.write("\r\n");
      out.write("			selectedWorkDay = $(this).data(\"value\");\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$('#startTime').timepicker({\r\n");
      out.write("			timeFormat : 'H:mm',\r\n");
      out.write("			interval : 30,\r\n");
      out.write("			minTime : '00:00',\r\n");
      out.write("			maxTime : '23:30',\r\n");
      out.write("			defaultTime : '8',\r\n");
      out.write("			startTime : '8:00',\r\n");
      out.write("			dynamic : false,\r\n");
      out.write("			dropdown : true,\r\n");
      out.write("			scrollbar : true\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$('#endTime').timepicker({\r\n");
      out.write("			timeFormat : 'H:mm',\r\n");
      out.write("			interval : 30,\r\n");
      out.write("			minTime : '00:00',\r\n");
      out.write("			maxTime : '23:30',\r\n");
      out.write("			defaultTime : '17',\r\n");
      out.write("			startTime : '17:00',\r\n");
      out.write("			dynamic : false,\r\n");
      out.write("			dropdown : true,\r\n");
      out.write("			scrollbar : true\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn-register\").click(function(){\r\n");
      out.write("		    var recruitVO = createRecruitVO();\r\n");
      out.write("			\r\n");
      out.write("			if (selectedPositions.length === 0) {\r\n");
      out.write("	            alert(\"최소 하나 이상의 포지션을 선택해주세요.\");\r\n");
      out.write("	            return false;\r\n");
      out.write("	        }\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("		        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/manage/recruit.do\",\r\n");
      out.write("		        type: \"POST\",\r\n");
      out.write("		        contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("		        data: JSON.stringify(recruitVO),\r\n");
      out.write("		        error: function(xhr) {\r\n");
      out.write("		            alert(\"등록에 실패했습니다.\");\r\n");
      out.write("		        },\r\n");
      out.write("		        success: function(response) {\r\n");
      out.write("		        	if(response === \"success\"){\r\n");
      out.write("			            alert(\"등록에 성공했습니다.\");\r\n");
      out.write("			            location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/recruit/recruits.do\";\r\n");
      out.write("		        	}\r\n");
      out.write("		        }\r\n");
      out.write("		    });\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn-update\").click(function(){\r\n");
      out.write("		    if (confirm(\"공고를 수정하시겠습니까?\")) {\r\n");
      out.write("			    var recruitVO = createRecruitVO();\r\n");
      out.write("			    recruitVO.id = $(\"#recruit_num\").val();\r\n");
      out.write("			    \r\n");
      out.write("			    if (selectedPositions.length === 0) {\r\n");
      out.write("			        alert(\"최소 하나 이상의 포지션을 선택해주세요.\");\r\n");
      out.write("			        return false;\r\n");
      out.write("			    }\r\n");
      out.write("			    \r\n");
      out.write("			    $.ajax({\r\n");
      out.write("			        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/manage/recruit.do\",\r\n");
      out.write("			        type: \"PUT\",\r\n");
      out.write("			        contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("			        data: JSON.stringify(recruitVO),\r\n");
      out.write("			        error: function(xhr) {\r\n");
      out.write("			            alert(\"수정에 실패했습니다.\");\r\n");
      out.write("			        },\r\n");
      out.write("			        success: function(response) {\r\n");
      out.write("			            if(response === \"success\"){\r\n");
      out.write("			                alert(\"수정에 성공했습니다.\");\r\n");
      out.write("			                location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/recruit/recruits.do\";\r\n");
      out.write("			            }\r\n");
      out.write("			        }\r\n");
      out.write("			    });\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn-delete\").click(function(){\r\n");
      out.write("		    if (confirm(\"정말로 이 채용공고를 삭제하시겠습니까?\")) {\r\n");
      out.write("		        var recruitNum = $(\"#recruit_num\").val();\r\n");
      out.write("			    $.ajax({\r\n");
      out.write("			        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/manage/recruit.do?id=\" + recruitNum,\r\n");
      out.write("			        type: \"DELETE\",\r\n");
      out.write("			        error: function(xhr) {\r\n");
      out.write("			            alert(\"삭제에 실패했습니다.\");\r\n");
      out.write("			        },\r\n");
      out.write("			        success: function(response) {\r\n");
      out.write("			            if(response === \"success\"){\r\n");
      out.write("			                alert(\"삭제에 성공했습니다.\");\r\n");
      out.write("			                location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/manage/recruit/recruits.do\";\r\n");
      out.write("			            }\r\n");
      out.write("			        }\r\n");
      out.write("			    });\r\n");
      out.write("		    }\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$('#btn-search-company').click(function() {\r\n");
      out.write("	        var keyword = $('#company_keyword').val();\r\n");
      out.write("	        \r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/manage/recruit/companies.do\",  // 실제 엔드포인트 URL로 변경해주세요\r\n");
      out.write("	            type: \"GET\",\r\n");
      out.write("	            data: { keyword: keyword },\r\n");
      out.write("	            dataType: \"JSON\",\r\n");
      out.write("	            success: function(response) {\r\n");
      out.write("	            	alert(\"기업 검색 결과가 조회되었습니다. 기업을 선택해주세요.\");\r\n");
      out.write("	    	        $('#company_name').text(\"\");\r\n");
      out.write("	                var select = $(\"#company-select\");\r\n");
      out.write("	                select.empty();\r\n");
      out.write("	                select.append('<option value=\"\">검색 결과 조회하기</option>');\r\n");
      out.write("\r\n");
      out.write("	                $.each(response, function(index, company) {\r\n");
      out.write("	                    select.append($('<option></option>')\r\n");
      out.write("	                        .attr('value', company.code)\r\n");
      out.write("	                        .text(company.name));\r\n");
      out.write("	                });\r\n");
      out.write("	                \r\n");
      out.write("	                if(response.length > 0) {\r\n");
      out.write("	                    select.show();\r\n");
      out.write("	                } else {\r\n");
      out.write("	                    select.hide();\r\n");
      out.write("	                }\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function(xhr, status, error) {\r\n");
      out.write("	                console.error(\"Ajax request failed: \" + status + \", \" + error);\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    // select 값이 변경될 때 company_name과 company_code 업데이트\r\n");
      out.write("	    $('#company-select').change(function() {\r\n");
      out.write("	        var selectedOption = $(this).find('option:selected');\r\n");
      out.write("	        $('#company_name').text(selectedOption.text());\r\n");
      out.write("	        $('#company_code').val(selectedOption.val());\r\n");
      out.write("	    });\r\n");
      out.write("		\r\n");
      out.write("	    var recruitNum = ");
      if (_jspx_meth_c_005fout_005f0(_jspx_page_context))
        return;
      out.write(";\r\n");
      out.write("	    if (recruitNum !== null) {\r\n");
      out.write("	        $.ajax({\r\n");
      out.write("	            url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/api/manage/recruit.do?id=\" + recruitNum,\r\n");
      out.write("	            method: 'GET',\r\n");
      out.write("	            success: function(data) {\r\n");
      out.write("	                populateForm(data);\r\n");
      out.write("	                console.log(data);\r\n");
      out.write("	            },\r\n");
      out.write("	            error: function(xhr, status, error) {\r\n");
      out.write("	                console.error(\"Error fetching recruit data:\", error);\r\n");
      out.write("	                alert(\"채용공고 데이터를 불러오는데 실패했습니다.\");\r\n");
      out.write("	            }\r\n");
      out.write("	        });\r\n");
      out.write("	    }\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function createRecruitVO(){\r\n");
      out.write("		var summernoteContent = $('#summernote').summernote('code');\r\n");
      out.write("	    return {\r\n");
      out.write("	        companyCode: $(\"#company_code\").val(),\r\n");
      out.write("	        companyName: $(\"#company_name\").val(),\r\n");
      out.write("	        position: selectedPositions.join(\",\"),\r\n");
      out.write("	        title: $(\"#title\").val(),\r\n");
      out.write("	        content: summernoteContent,\r\n");
      out.write("	        headcount: $(\"#headcount\").val(),\r\n");
      out.write("	        endDate: $(\"#end_date\").val(),\r\n");
      out.write("	        workType: $(\"input[name='work_type']:checked\").val() || \"\",\r\n");
      out.write("	        workDay: selectedWorkDay,\r\n");
      out.write("	        workStartTime: $(\"#startTime\").val(),\r\n");
      out.write("	        workEndTime: $(\"#endTime\").val(),\r\n");
      out.write("	        workPlace: $(\"#work_place\").val(),\r\n");
      out.write("	        salaryType: $(\"input[name='sal_type']:checked\").val() || \"\",\r\n");
      out.write("	        salary: $(\"#sal\").val(),\r\n");
      out.write("	        careerStandard: $(\"input[name='career_type']:checked\").val() || \"\",\r\n");
      out.write("	        careerYears: parseInt($(\"#career_years\").val(), 10),\r\n");
      out.write("	        eduStandard: $(\"input[name='edu_standard']:checked\").val() || \"\"\r\n");
      out.write("	    };\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function populateForm(data) {\r\n");
      out.write("	    // 기본 텍스트 필드\r\n");
      out.write("	    $('#recruit_num').val(data.id);\r\n");
      out.write("	    $('#company_name').text(data.companyName);\r\n");
      out.write("	    $('#company_code').val(data.companyCode);\r\n");
      out.write("	    $('#title').val(data.title);\r\n");
      out.write("	    $('#end_date').val(data.endDate);\r\n");
      out.write("	    $('#headcount').val(data.companyPeopleNum);\r\n");
      out.write("	    $('#work_place').val(data.workPlace);\r\n");
      out.write("	    $('#sal').val(data.salary);\r\n");
      out.write("	    $('#career_years').val(data.careerYears);\r\n");
      out.write("\r\n");
      out.write("	    // 라디오 버튼\r\n");
      out.write("	    $(`input[name=\"sal_type\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.salaryType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]`).prop('checked', true);\r\n");
      out.write("	    $(`input[name=\"career_type\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.careerType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]`).prop('checked', true);\r\n");
      out.write("	    $(`input[name=\"edu_standard\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.eduStandard}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]`).prop('checked', true);\r\n");
      out.write("	    \r\n");
      out.write("	    var $exactMatch = $(`input[name=\"work_type\"][value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${data.hireCategory}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]`);\r\n");
      out.write("	    var lowercaseHireCategory = data.hireCategory.toLowerCase();\r\n");
      out.write("	    var matchFound = false;\r\n");
      out.write("	    $('input[name=\"work_type\"]').each(function() {\r\n");
      out.write("	        if ($(this).val().toLowerCase() === lowercaseHireCategory) {\r\n");
      out.write("	            $(this).prop('checked', true);\r\n");
      out.write("	            matchFound = true;\r\n");
      out.write("	            console.log(\"Case-insensitive match found and checked:\", $(this).val());\r\n");
      out.write("	            return false; // 루프 중단\r\n");
      out.write("	        }\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    selectedPositions = [];\r\n");
      out.write("	    if (data.position) {\r\n");
      out.write("	        data.position.split(',').forEach(pos => {\r\n");
      out.write("	            selectedPositions.push(pos); \r\n");
      out.write("	        });\r\n");
      out.write("\r\n");
      out.write("		    $(\".position-chip\").each(function(){\r\n");
      out.write("		    	var chipValue = $(this).data(\"value\");\r\n");
      out.write("	            if (selectedPositions.includes(chipValue)) {\r\n");
      out.write("	                $(this).addClass(\"active\");\r\n");
      out.write("	            }\r\n");
      out.write("		    });\r\n");
      out.write("	    }\r\n");
      out.write("	    \r\n");
      out.write("	    // 근무 요일 (Chip)\r\n");
      out.write("	    $(\".work-day-chip\").removeClass(\"active\");\r\n");
      out.write("	    $(\".work-day-chip\").each(function(){\r\n");
      out.write("	    	var chipValue = $(this).data(\"value\");\r\n");
      out.write("            if (chipValue === data.workDay) {\r\n");
      out.write("                $(this).addClass(\"active\");\r\n");
      out.write("            }\r\n");
      out.write("	    });\r\n");
      out.write("\r\n");
      out.write("	    // 근무 시간\r\n");
      out.write("	    var workTime = data.workTime.split(\"~\");\r\n");
      out.write("	    $('#startTime').val(workTime[0]);\r\n");
      out.write("	    $('#endTime').val(workTime[1]);\r\n");
      out.write("\r\n");
      out.write("	    // Summernote 에디터\r\n");
      out.write("	    $('#summernote').summernote('code', data.content);\r\n");
      out.write("\r\n");
      out.write("	    // 경력 관련 필드 처리\r\n");
      out.write("	    if (data.careerType === '경력') {\r\n");
      out.write("	        $('#career_years').prop('disabled', false);\r\n");
      out.write("	    } else {\r\n");
      out.write("	        $('#career_years').prop('disabled', true);\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- golgolz end -->\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<main\r\n");
      out.write("		class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg ps--active-y\">\r\n");
      out.write("		<nav\r\n");
      out.write("			class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\r\n");
      out.write("			id=\"navbarBlur\" data-scroll=\"true\">\r\n");
      out.write("			<div class=\"container-fluid py-1 px-3\">\r\n");
      out.write("				<nav aria-label=\"breadcrumb\">\r\n");
      out.write("					<ol\r\n");
      out.write("						class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\r\n");
      out.write("						<li class=\"breadcrumb-item text-sm\"><a\r\n");
      out.write("							class=\"opacity-5 text-dark\" href=\"javascript:;\">\r\n");
      out.write("							관리자 기능</a></li>\r\n");
      out.write("						<!-- 하단의 대시보드 텍스트를 본인 기능으로 변경 필요  -->\r\n");
      out.write("						<li class=\"breadcrumb-item text-sm text-dark active\"\r\n");
      out.write("							aria-current=\"page\">채용 공고 관리</li>\r\n");
      out.write("					</ol>\r\n");
      out.write("					<h6 class=\"font-weight-bolder mb-0\">채용 공고 상세</h6>\r\n");
      out.write("				</nav>\r\n");
      out.write("			</div>\r\n");
      out.write("		</nav>\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<!-- golgolz start -->\r\n");
      out.write("			<div id=\"contentcolumn\" class=\"\">\r\n");
      out.write("				<div class=\"contents\">\r\n");
      out.write("					<form id=\"dataForm\" name=\"dataForm\" action=\"http://localhost/recruit-app/manage/common_process.jsp\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("						<div class=\"subtitle\">\r\n");
      out.write("							<img src=\"http://localhost/recruit-app/assets/images/manage/common/bul_subtitle.gif\" />\r\n");
      out.write("							공고 정보\r\n");
      out.write("						</div>\r\n");
      out.write("						<input type=\"hidden\" id=\"recruit_num\" value=\"lee@daum_1\" />\r\n");
      out.write("						<table class=\"tbstyleB\" width=\"100%\">\r\n");
      out.write("							<colgroup>\r\n");
      out.write("								<col width=\"15%\" />\r\n");
      out.write("								<col width=\"85%\" />\r\n");
      out.write("							</colgroup>\r\n");
      out.write("							<tbody>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">기업명</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"text\" id=\"company_keyword\" name=\"company_keyword\" placeholder=\"검색할 기업명을 입력해주세요.\" size=\"20\" class=\"inputbox naver_shopping_prodName\" />\r\n");
      out.write("										<input type=\"button\" id=\"btn-search-company\" class=\"btn btn-outline-success btn-sm\" value=\"검색\" />\r\n");
      out.write("								        <span style=\"font-weight:bold; margin-left: 20px;\">검색 결과 : </span>\r\n");
      out.write("								        <select id=\"company-select\" style=\"height: 28px;\">\r\n");
      out.write("								            <option value=\"\">기업을 선택하세요</option>\r\n");
      out.write("								        </select>\r\n");
      out.write("								        <span style=\"font-weight:bold; margin-left: 20px;\">선택된 기업 : </span>\r\n");
      out.write("								        <span id=\"company_name\"></span>\r\n");
      out.write("										<input type=\"hidden\" id=\"company_code\" name=\"company_code\" value=\"\"/>\r\n");
      out.write("										<!-- <input type=\"button\" id=\"btn-register\" class=\"btn btn-success btn-sm\" value=\"조회\" /> -->\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">공고 제목</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"text\" id=\"title\" name=\"title\" value=\"공고 제목을 입력해주세요.\" size=\"100\" class=\"inputbox naver_shopping_prodName\" />\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">모집 종료일</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"text\" id=\"end_date\" name=\"end_date\" value=\"2024-06-30\" size=\"10\" class=\"inputbox naver_shopping_prodName\" />\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">모집 포지션</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<div class=\"chip-group\">\r\n");
      out.write("											<div class=\"chip position-chip\" data-value=\"BACKDEV\">백엔드</div>\r\n");
      out.write("											<div class=\"chip position-chip\" data-value=\"FRTDEV\">프론트엔드</div>\r\n");
      out.write("											<div class=\"chip position-chip\" data-value=\"EMBDEV\">임베디드</div>\r\n");
      out.write("											<div class=\"chip position-chip\" data-value=\"QAENG\">QA</div>\r\n");
      out.write("											<div class=\"chip position-chip\" data-value=\"INFENG\">인프라</div>\r\n");
      out.write("											<div class=\"chip position-chip\" data-value=\"DEVOPENG\">DevOps</div>\r\n");
      out.write("											<!-- <button id=\"resetButton\">초기화</button> -->\r\n");
      out.write("										</div>\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">모집 인원</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"number\" id=\"headcount\" name=\"headcount\" value=\"0\" size=\"10\" class=\"inputbox naver_shopping_prodName\" /> 명\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</tbody>\r\n");
      out.write("						</table>\r\n");
      out.write("						<div class=\"subtitle\">\r\n");
      out.write("							<img src=\"http://localhost/recruit-app/assets/images/manage/common/bul_subtitle.gif\" />\r\n");
      out.write("							근무 조건\r\n");
      out.write("						</div>\r\n");
      out.write("						<table class=\"tbstyleB\" width=\"100%\">\r\n");
      out.write("							<colgroup>\r\n");
      out.write("								<col width=\"15%\" />\r\n");
      out.write("								<col width=\"85%\" />\r\n");
      out.write("							</colgroup>\r\n");
      out.write("							<tbody>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">고용형태</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"radio\" name=\"work_type\" value=\"정규직\"/><label>정규직</label>\r\n");
      out.write("										<input type=\"radio\" name=\"work_type\" value=\"계약직\"/><label>계약직</label>\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">근무 요일</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<div class=\"chip-group\">\r\n");
      out.write("											<div class=\"chip work-day-chip\" data-value=\"주5일(월-금)\">주5일(월-금)</div>\r\n");
      out.write("											<div class=\"chip work-day-chip\" data-value=\"주5일(스케줄)\">주5일(스케줄)</div>\r\n");
      out.write("											<div class=\"chip work-day-chip\" data-value=\"주4일\">주4일</div>\r\n");
      out.write("											<!-- <button id=\"resetButton\">초기화</button> -->\r\n");
      out.write("										</div>\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">근무 시간(시간 선택)</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<!-- <input type=\"text\" name=\"name\" value=\"\" size=\"50\" class=\"inputbox naver_shopping_prodName\" /> -->\r\n");
      out.write("										<input type=\"text\" id=\"startTime\" size=\"9\" class=\"inputbox\"/> -\r\n");
      out.write("										<input type=\"text\" id=\"endTime\" size=\"9\" class=\"inputbox\"/>\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">근무지</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"text\" id=\"work_place\" name=\"work_place\" value=\"서울시 강남구\" size=\"50\" class=\"inputbox naver_shopping_prodName\" />\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">급여</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"radio\" name=\"sal_type\" value=\"일급\" /><label>일급</label>\r\n");
      out.write("										<input type=\"radio\" name=\"sal_type\" value=\"주급\" /><label>주급</label>\r\n");
      out.write("										<input type=\"radio\" name=\"sal_type\" value=\"월급\" /><label>월급</label>\r\n");
      out.write("										<input type=\"radio\" name=\"sal_type\" value=\"연봉\" checked/><label>연봉</label>\r\n");
      out.write("										<input type=\"number\" id=\"sal\" name=\"sal\" value=\"3000\" size=\"10\" class=\"inputbox naver_shopping_prodName\" /> 만원\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</tbody>\r\n");
      out.write("						</table>\r\n");
      out.write("						<div class=\"subtitle\">\r\n");
      out.write("							<img src=\"http://localhost/recruit-app/assets/images/manage/common/bul_subtitle.gif\" />\r\n");
      out.write("							지원 조건\r\n");
      out.write("						</div>\r\n");
      out.write("						<table class=\"tbstyleB\" width=\"100%\">\r\n");
      out.write("							<colgroup>\r\n");
      out.write("								<col width=\"15%\" />\r\n");
      out.write("								<col width=\"85%\" />\r\n");
      out.write("							</colgroup>\r\n");
      out.write("							<tbody>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">경력</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"radio\" name=\"career_type\" value=\"경력무관\" checked/><label>경력무관</label>\r\n");
      out.write("										<input type=\"radio\" name=\"career_type\" value=\"신입\" /><label>신입</label>\r\n");
      out.write("										<input type=\"radio\" name=\"career_type\" value=\"경력\" /><label>경력 (</label>\r\n");
      out.write("										<input type=\"number\" id=\"career_years\" name=\"career_years\" value=\"\" size=\"5\" class=\"inputbox naver_shopping_prodName\" /> 년)\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"label\">학력</td>\r\n");
      out.write("									<td class=\"box text\">\r\n");
      out.write("										<input type=\"radio\" name=\"edu_standard\" value=\"1\" checked/><label>고등학교 졸업 </label>\r\n");
      out.write("										<input type=\"radio\" name=\"edu_standard\" value=\"2\" /><label>전문대 졸업 </label>\r\n");
      out.write("										<input type=\"radio\" name=\"edu_standard\" value=\"3\" /><label>대학교 졸업 </label>\r\n");
      out.write("										<input type=\"radio\" name=\"edu_standard\" value=\"4\" /><label>대학원(석사) </label>\r\n");
      out.write("										<input type=\"radio\" name=\"edu_standard\" value=\"5\" /><label>대학원(박사) </label>\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</tbody>\r\n");
      out.write("						</table>\r\n");
      out.write("						<div class=\"subtitle\">\r\n");
      out.write("							<img src=\"http://localhost/recruit-app/assets/images/manage/common/bul_subtitle.gif\" />\r\n");
      out.write("							공고상세\r\n");
      out.write("						</div>\r\n");
      out.write("						<div id=\"summernote\">\r\n");
      out.write("							<p style=\"font-size: 25px;\">\r\n");
      out.write("								<b>포지션상세</b>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p> \r\n");
      out.write("								포지션 상세에 대한 내용을 자유롭게 작성해주세요.</p><p>\r\n");
      out.write("								<br></p><p></p>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p style=\"font-size: 25px;\">\r\n");
      out.write("								<b>주요업무</b>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p>\r\n");
      out.write("								주요업무에 대한 내용을 자유롭게 작성해주세요.</p><p>\r\n");
      out.write("								<br></p><p></p>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p style=\"font-size: 25px;\">\r\n");
      out.write("								<b>자격요건</b>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p>\r\n");
      out.write("								자격요건에 대한 내용을 자유롭게 작성해주세요.</p><p>\r\n");
      out.write("								<br></p><p></p>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p style=\"font-size: 25px;\">\r\n");
      out.write("								<b>우대사항</b>\r\n");
      out.write("							</p>\r\n");
      out.write("								우대사항에 대한 내용을 자유롭게 작성해주세요.<br>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"alignCenter\">\r\n");
      out.write("					        ");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("							<input type=\"button\" id=\"btn-back\" class=\"btn btn-outline-dark btn-sm detail-control\" value=\"뒤로\" onClick=\"javascript:history.back();\"/>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- golgolz end -->\r\n");
      out.write("		</div>\r\n");
      out.write("	</main>\r\n");
      out.write("	<script src=\"//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /WEB-INF/views/manage/recruit/detail.jsp(200,22) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${recruitNum}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/manage/recruit/detail.jsp(200,22) name = default type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setDefault("null");
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fdefault_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					            ");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("	            				");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("        					");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/manage/recruit/detail.jsp(515,17) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty recruitNum}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("									<input type=\"button\" id=\"btn-register\" class=\"btn btn-outline-success btn-sm detail-control\" value=\"등록하기\" />\r\n");
          out.write("								");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("									<input type=\"button\" id=\"btn-update\" class=\"btn btn-outline-warning btn-sm detail-control\" value=\"수정하기\" />\r\n");
          out.write("									<input type=\"button\" id=\"btn-delete\" class=\"btn btn-outline-danger btn-sm detail-control\" value=\"삭제하기\" />\r\n");
          out.write("								");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
