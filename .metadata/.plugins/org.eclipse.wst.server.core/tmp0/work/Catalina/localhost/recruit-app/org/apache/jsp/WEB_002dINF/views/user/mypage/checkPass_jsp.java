/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-14 15:57:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class checkPass_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/user/lib.jsp", out, false);
      out.write("  \r\n");
      out.write("	<!-- golgolz start -->\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("	<!-- golgolz start -->\r\n");
      out.write("	<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("	<link rel=\"shortcut icon\" href=\"https://static.wanted.co.kr/favicon/new/favicon.ico\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"http://localhost/recruit-app/assets/css/user_login.css\"/>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"http://localhost/recruit-app/assets/css/find_user_info.css\"/>\r\n");
      out.write("	<!-- golgolz end -->\r\n");
      out.write("	<style type=\"text/css\">\r\n");
      out.write("		<!-- golgolz start -->\r\n");
      out.write("		.error {\r\n");
      out.write("			  color: red;\r\n");
      out.write("			}\r\n");
      out.write("		<!-- golgolz end -->\r\n");
      out.write("	</style>\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("			<!-- golgolz start -->\r\n");
      out.write("				\r\n");
      out.write("			$(function(){\r\n");
      out.write("				\r\n");
      out.write("				$(\"#nextBtn\").click(function(){\r\n");
      out.write("					isNull = chkNull();\r\n");
      out.write("					isValidatePass = validatePass();\r\n");
      out.write("					\r\n");
      out.write("					if(!isNull){\r\n");
      out.write("						alert('비밀번호를 입력해주세요.');\r\n");
      out.write("						return;\r\n");
      out.write("					}else if(!isValidatePass){\r\n");
      out.write("						alert('잘못된 비밀번호 형식입니다.');\r\n");
      out.write("						inputPass.val('');\r\n");
      out.write("						$(\"#nextBtn\").prop(\"disabled\",true);\r\n");
      out.write("						return;\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					if(isNull && isValidatePass){\r\n");
      out.write("						//location.href='http://localhost/recruit-app/user/mypage/modifyUserPage.do';\r\n");
      out.write("						$(\"#checkPassFrm\").submit();\r\n");
      out.write("					}\r\n");
      out.write("				});//click\r\n");
      out.write("				\r\n");
      out.write("				var inputPass = $(\"#inputPass\");\r\n");
      out.write("				\r\n");
      out.write("				function chkNull(){\r\n");
      out.write("					\r\n");
      out.write("					var isNotEmptyPass = inputPass.val().trim() !== '';\r\n");
      out.write("					\r\n");
      out.write("					if(isNotEmptyPass){\r\n");
      out.write("						$(\"#nextBtn\").prop(\"disabled\",false);\r\n");
      out.write("					}else{\r\n");
      out.write("						$(\"#nextBtn\").prop(\"disabled\",true);\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("					return isNotEmptyPass;\r\n");
      out.write("				}//function\r\n");
      out.write("				\r\n");
      out.write("				\r\n");
      out.write("			    function validatePass(){\r\n");
      out.write("			    	 var pass = inputPass.val().trim();\r\n");
      out.write("			    	 var passRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()-=])[a-zA-Z\\d!@#$%^&*()-=]{8,16}$/;\r\n");
      out.write("			    	 return passRegex.test(pass);\r\n");
      out.write("			    	}\r\n");
      out.write("			    \r\n");
      out.write("			    \r\n");
      out.write("				// 초기 로딩\r\n");
      out.write("			    chkNull();\r\n");
      out.write("				\r\n");
      out.write("			    inputPass.on(\"input\",chkNull);\r\n");
      out.write("				\r\n");
      out.write("			});//ready\r\n");
      out.write("			<!-- golgolz end -->\r\n");
      out.write("	</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div id=\"__next\" data-reactroot=\"\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/user/header.jsp", out, false);
      out.write("\r\n");
      out.write("		<main class=\"JobsFeed_Jobsfeed__DpeV9\">  \r\n");
      out.write("			<section class=\"Section_Section__P1hhc\">\r\n");
      out.write("			<!-- golgolz start -->\r\n");
      out.write("			<div class=\"css-wohrsg\">\r\n");
      out.write("				<div class=\"css-v1s0lc\">\r\n");
      out.write("					<div class=\"css-1ktsezg\">\r\n");
      out.write("						<div class=\"css-1nm9gyu\">\r\n");
      out.write("							<div class=\"css-oan6e\"><button type=\"button\" class=\"css-1krggrv\"><span\r\n");
      out.write("										class=\"css-1ihsymv\"><svg viewBox=\"0 0 24 24\" class=\"css-t07f4u\">\r\n");
      out.write("											<path fill=\"#171719\"\r\n");
      out.write("												d=\"M16.1363 3.36297C16.4877 3.71444 16.4877 4.28429 16.1363 4.63576L8.77265 11.9994L16.1362 19.363C16.4877 19.7144 16.4877 20.2843 16.1362 20.6358C15.7848 20.9872 15.2149 20.9872 14.8635 20.6358L6.86346 12.6358C6.51199 12.2843 6.51199 11.7144 6.86346 11.363L14.8635 3.36297C15.2149 3.0115 15.7848 3.0115 16.1363 3.36297Z\">\r\n");
      out.write("											</path>\r\n");
      out.write("										</svg></span></button></div>\r\n");
      out.write("							<div class=\"css-1iooy02\">\r\n");
      out.write("								<p data-testid=\"Typography\" color=\"#000000\" class=\"css-14qpgc6\">비밀번호 확인</p>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"css-1jxi7lq\"></div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"css-ng7qrx\">\r\n");
      out.write("							<p data-testid=\"Typography\" color=\"rgba(55, 56, 60, 0.61)\" class=\"css-d08m0c\" style=\"margin-bottom: 25px;\">개인정보 변경을 위해 비밀번호 확인이 필요해요.</p>\r\n");
      out.write("							<c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ resultMsg != null }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("								<div class=\"error\" style=\"text-align: center; color: red;\">\r\n");
      out.write("								");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ resultMsg }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("								</div>\r\n");
      out.write("							</c:if>\r\n");
      out.write("							<form id=\"checkPassFrm\" action=\"../mypage/chkPassword.do\" method=\"post\">\r\n");
      out.write("							<div class=\"css-env1z2\"><label data-testid=\"Typography\" color=\"rgba(55, 56, 60, 0.61)\"\r\n");
      out.write("									for=\"password\" class=\"css-afh7p0\">비밀번호</label></div>\r\n");
      out.write("							<div class=\"css-14o8ny9\">\r\n");
      out.write("								<div class=\"css-gjm025\">\r\n");
      out.write("							<input type=\"password\" id=\"inputPass\"\r\n");
      out.write("										placeholder=\"비밀번호를 입력해주세요\" name=\"password\" class=\"css-1sbrczv\" value=\"\"></div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<br/>\r\n");
      out.write("							<button type=\"button\" id=\"nextBtn\" class=\"css-1w1wifl\">\r\n");
      out.write("								<span color=\"#000000\" class=\"css-kfktv3\">계속</span>\r\n");
      out.write("							</button>\r\n");
      out.write("							</form>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- golgolz end -->\r\n");
      out.write("			</section>\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/user/footer.jsp", out, false);
      out.write("  \r\n");
      out.write("		</main>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
