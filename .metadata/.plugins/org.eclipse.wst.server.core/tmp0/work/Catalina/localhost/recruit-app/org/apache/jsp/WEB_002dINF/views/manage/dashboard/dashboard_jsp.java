/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-10 07:55:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.manage.dashboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/dev/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/recruit-app/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1716272562048L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>    \r\n");
      out.write("	<style>\r\n");
      out.write("    .chart-container \r\n");
      out.write("    {\r\n");
      out.write("        height: 320px;\r\n");
      out.write("        margin-bottom: 10px; \r\n");
      out.write("    }\r\n");
      out.write("    .bg-gradient-primary{\r\n");
      out.write("    	background-image: linear-gradient(195deg, #ec407a, #d81b60) !important;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .chart.fullscreen {\r\n");
      out.write("    position: fixed;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    left: 0;\r\n");
      out.write("    width: 100vw;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    z-index: 9999;\r\n");
      out.write("    background: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".chart.fullscreen + .card-body {\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("    <!-- AdminLTE CSS -->\r\n");
      out.write("    <!-- <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/css/adminlte.min.css\"> -->\r\n");
      out.write("    <!-- Font Awesome -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\r\n");
      out.write("    <!-- Google Font: Source Sans Pro -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback\">\r\n");
      out.write("    <!-- AdminLTE JS -->\r\n");
      out.write("    <!-- <script src=\"https://cdn.jsdelivr.net/npm/admin-lte@3.1/dist/js/adminlte.min.js\"></script> -->\r\n");
      out.write("    <!-- ChartJS -->\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js\"></script>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/lib.jsp", out, false);
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        $(function(){\r\n");
      out.write("            $(\"#dashboard_menu\").addClass(\"bg-gradient-primary\");\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"hold-transition sidebar-mini\">\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/header.jsp", out, false);
      out.write("\r\n");
      out.write("    <main class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg ps ps--active-y\">\r\n");
      out.write("        <nav class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\" id=\"navbarBlur\" data-scroll=\"true\">\r\n");
      out.write("            <div class=\"container-fluid py-1 px-3\">\r\n");
      out.write("                <nav aria-label=\"breadcrumb\">\r\n");
      out.write("                    <ol class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\r\n");
      out.write("                        <li class=\"breadcrumb-item text-sm\"><a class=\"opacity-5 text-dark\" href=\"javascript:;\">관리자 기능</a></li>\r\n");
      out.write("                        <li class=\"breadcrumb-item text-sm text-dark active\" aria-current=\"page\">대시보드</li>\r\n");
      out.write("                    </ol>\r\n");
      out.write("                    <h6 class=\"font-weight-bolder mb-0\">대시보드</h6>\r\n");
      out.write("                </nav>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("        <!-- golgolz start -->\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("            <section class=\"content\">\r\n");
      out.write("                <div class=\"container-fluid\">\r\n");
      out.write("                    <div class=\"row\">\r\n");
      out.write("                        <div class=\"col-lg-6 col-md-12 chart-container\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"card-body\">\r\n");
      out.write("                            <div class=\"d-flex flex-column\">\r\n");
      out.write("                                <h4 class=\"card-title\">최근 회원가입자 수 : </h4>\r\n");
      out.write("                                <span class=\"text-bold text-lg\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalSignups}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" 명</span> \r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"position-relative mb-4\">\r\n");
      out.write("                                <canvas id=\"signup-chart\"></canvas>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"d-flex flex-row justify-content-end\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                        <div class=\"col-lg-6 col-md-12 chart-container\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"card-body\">\r\n");
      out.write("                            <div class=\"d-flex flex-column\">\r\n");
      out.write("                                <h4 class=\"card-title\">최근 등록 기업 수 : </h4>\r\n");
      out.write("                                <span class=\"text-bold text-lg\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${totalCompanies}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" 개</span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"position-relative mb-4\">\r\n");
      out.write("                                <canvas id=\"companies-chart\"></canvas>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"d-flex flex-row justify-content-end\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-lg-6 col-md-12\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"card-header\">\r\n");
      out.write("                            <h3 class=\"card-title\">기술 스택</h3>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"card-body\">\r\n");
      out.write("                            <canvas id=\"techStack-chart\"></canvas>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-lg-6 col-md-12\">\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <div class=\"card-header\">\r\n");
      out.write("                            <h3 class=\"card-title\">등록 리뷰 수</h3>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"card-body\">\r\n");
      out.write("                            <canvas id=\"reviewCount-chart\"></canvas>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <script>\r\n");
      out.write("    $(function(){\r\n");
      out.write("        $(\"#dashboard_menu\").addClass(\"bg-gradient-primary\");\r\n");
      out.write("    });\r\n");
      out.write("        $(function () {\r\n");
      out.write("        	\r\n");
      out.write("        	// JSP에서 전달된 JSON 데이터\r\n");
      out.write("            var signupCountsJson = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${signupCountsLastWeekJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            console.log(\"Signup Counts JSON:\", signupCountsJson); // JSON 데이터 확인\r\n");
      out.write("\r\n");
      out.write("            // JSON 데이터 파싱\r\n");
      out.write("            try {\r\n");
      out.write("                var parsedSignupCounts = JSON.parse(signupCountsJson);\r\n");
      out.write("                console.log(\"Parsed Signup Counts:\", parsedSignupCounts); // 파싱된 데이터 확인\r\n");
      out.write("\r\n");
      out.write("                // 날짜와 가입자 수를 추출하여 배열에 저장\r\n");
      out.write("                var labels = parsedSignupCounts.map(function(item) {\r\n");
      out.write("                    return item.signupDate;\r\n");
      out.write("                });\r\n");
      out.write("                var data = parsedSignupCounts.map(function(item) {\r\n");
      out.write("                    return item.signupCount;\r\n");
      out.write("                });\r\n");
      out.write("                // 데이터 확인을 위해 콘솔에 출력\r\n");
      out.write("                console.log(\"Labels:\", labels);\r\n");
      out.write("                console.log(\"Data:\", data);\r\n");
      out.write("\r\n");
      out.write("                // 회원가입자 수 차트 생성\r\n");
      out.write("                var ctxSignup = document.getElementById('signup-chart').getContext('2d');\r\n");
      out.write("                var signupChart = new Chart(ctxSignup, {\r\n");
      out.write("                    type: 'line',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: labels,\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            label: '가입자 수',\r\n");
      out.write("                            backgroundColor: 'rgba(60,141,188,0.1)',\r\n");
      out.write("                            borderColor: 'rgba(60,141,188,1)',\r\n");
      out.write("                            pointRadius: false,\r\n");
      out.write("                            pointColor: '#3b8bba',\r\n");
      out.write("                            pointStrokeColor: 'rgba(60,141,188,1)',\r\n");
      out.write("                            pointHighlightFill: '#fff',\r\n");
      out.write("                            pointHighlightStroke: 'rgba(60,141,188,1)',\r\n");
      out.write("                            data: data\r\n");
      out.write("                        }]\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        maintainAspectRatio: false,\r\n");
      out.write("                        responsive: true,\r\n");
      out.write("                        tooltips: {\r\n");
      out.write("                            mode: 'index',\r\n");
      out.write("                            intersect: true\r\n");
      out.write("                        },\r\n");
      out.write("                        hover: {\r\n");
      out.write("                            mode: 'nearest',\r\n");
      out.write("                            intersect: true\r\n");
      out.write("                        },\r\n");
      out.write("                        scales: {\r\n");
      out.write("                            yAxes: [{\r\n");
      out.write("                                ticks: {\r\n");
      out.write("                                    beginAtZero: true,\r\n");
      out.write("                                    max: 10\r\n");
      out.write("                                }\r\n");
      out.write("                            }]\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } catch (e) {\r\n");
      out.write("                console.error('JSON 파싱 오류:', e);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("         // 등록 기업 수 데이터 처리\r\n");
      out.write("            var registeredCompanyCountsJson = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${registeredCompanyCountsLastWeekJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            console.log(\"Registered Company Counts JSON:\", registeredCompanyCountsJson);\r\n");
      out.write("\r\n");
      out.write("            try {\r\n");
      out.write("                var parsedRegisteredCompanyCounts = JSON.parse(registeredCompanyCountsJson);\r\n");
      out.write("                console.log(\"Parsed Registered Company Counts:\", parsedRegisteredCompanyCounts);\r\n");
      out.write("\r\n");
      out.write("                var companyLabels = parsedRegisteredCompanyCounts.map(function(item) {\r\n");
      out.write("                    return item.registrationDate;\r\n");
      out.write("                });\r\n");
      out.write("                var companyData = parsedRegisteredCompanyCounts.map(function(item) {\r\n");
      out.write("                    return item.companyCount;\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                console.log(\"Company Labels:\", companyLabels);\r\n");
      out.write("                console.log(\"Company Data:\", companyData);\r\n");
      out.write("\r\n");
      out.write("                var ctxCompanies = document.getElementById('companies-chart').getContext('2d');\r\n");
      out.write("                var companiesChart = new Chart(ctxCompanies, {\r\n");
      out.write("                    type: 'line',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: companyLabels,\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            label: '등록 기업 수',\r\n");
      out.write("                            backgroundColor: 'rgba(0,128,0,0.1)',\r\n");
      out.write("                            borderColor: 'rgba(0,128,0,1)',\r\n");
      out.write("                            pointRadius: false,\r\n");
      out.write("                            pointColor: '#008000',\r\n");
      out.write("                            pointStrokeColor: 'rgba(0,128,0,1)',\r\n");
      out.write("                            pointHighlightFill: '#fff',\r\n");
      out.write("                            pointHighlightStroke: 'rgba(0,128,0,1)',\r\n");
      out.write("                            data: companyData\r\n");
      out.write("                        }]\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        maintainAspectRatio: false,\r\n");
      out.write("                        responsive: true,\r\n");
      out.write("                        tooltips: {\r\n");
      out.write("                            mode: 'index',\r\n");
      out.write("                            intersect: true\r\n");
      out.write("                        },\r\n");
      out.write("                        hover: {\r\n");
      out.write("                            mode: 'nearest',\r\n");
      out.write("                            intersect: true\r\n");
      out.write("                        },\r\n");
      out.write("                        scales: {\r\n");
      out.write("                            yAxes: [{\r\n");
      out.write("                                ticks: {\r\n");
      out.write("                                    beginAtZero: true,\r\n");
      out.write("                                    max: 10\r\n");
      out.write("                                }\r\n");
      out.write("                            }]\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } catch (e) {\r\n");
      out.write("                console.error('Registered Company JSON 파싱 오류:', e);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // 기술 스택 데이터 처리\r\n");
      out.write("            var skillCountsJson = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skillCountsJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            console.log(\"Skill Counts JSON:\", skillCountsJson);\r\n");
      out.write("\r\n");
      out.write("            try {\r\n");
      out.write("                var parsedSkillCounts = JSON.parse(skillCountsJson);\r\n");
      out.write("                console.log(\"Parsed Skill Counts:\", parsedSkillCounts);\r\n");
      out.write("\r\n");
      out.write("                var skillLabels = parsedSkillCounts.map(function(item) {\r\n");
      out.write("                    return item.skillCode;\r\n");
      out.write("                });\r\n");
      out.write("                var skillData = parsedSkillCounts.map(function(item) {\r\n");
      out.write("                    return item.skillCount;\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                console.log(\"Skill Labels:\", skillLabels);\r\n");
      out.write("                console.log(\"Skill Data:\", skillData);\r\n");
      out.write("\r\n");
      out.write("                var ctxTechStack = document.getElementById('techStack-chart').getContext('2d');\r\n");
      out.write("                var techStackChart = new Chart(ctxTechStack, {\r\n");
      out.write("                    type: 'doughnut',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: skillLabels,\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            data: skillData,\r\n");
      out.write("                            backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#ff851b',\r\n");
      out.write("                                '#3c8dbc', '#d2d6de', '#7cb342', '#ff7043', '#d81b60']\r\n");
      out.write("                        }]\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        responsive: true,\r\n");
      out.write("                        legend: {\r\n");
      out.write("                            position: 'right'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            } catch (e) {\r\n");
      out.write("                console.error('Skill JSON 파싱 오류:', e);\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // 최근 등록 리뷰 수 차트 데이터 처리\r\n");
      out.write("            var reviewCountsJson = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewCountsJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("            var parsedReviewCounts = JSON.parse(reviewCountsJson);\r\n");
      out.write("            var reviewLabels = parsedReviewCounts.map(function(item) { return item.month; });\r\n");
      out.write("            var reviewData = parsedReviewCounts.map(function(item) { return item.reviewCount; });\r\n");
      out.write("\r\n");
      out.write("            var ctxReviewCount = document.getElementById('reviewCount-chart').getContext('2d');\r\n");
      out.write("            var reviewCountChart = new Chart(ctxReviewCount, {\r\n");
      out.write("                type: 'bar',\r\n");
      out.write("                data: {\r\n");
      out.write("                    labels: reviewLabels,\r\n");
      out.write("                    datasets: [{\r\n");
      out.write("                        label: '리뷰 수',\r\n");
      out.write("                        data: reviewData,\r\n");
      out.write("                        backgroundColor: 'rgba(255,215,0,0.5)',\r\n");
      out.write("                        borderColor: 'rgba(255,215,0,1)',\r\n");
      out.write("                        borderWidth: 1\r\n");
      out.write("                    }]\r\n");
      out.write("                },\r\n");
      out.write("                options: {\r\n");
      out.write("                    responsive: true,\r\n");
      out.write("                    scales: {\r\n");
      out.write("                    	 yAxes: [{\r\n");
      out.write("                             ticks: {\r\n");
      out.write("                                 beginAtZero: true,\r\n");
      out.write("                                 maxTicksLimit: 10 // y축 눈금을 10개로 제한\r\n");
      out.write("                             }\r\n");
      out.write("                         }]\r\n");
      out.write("                \r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("    </div>\r\n");
      out.write("  	</main>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
