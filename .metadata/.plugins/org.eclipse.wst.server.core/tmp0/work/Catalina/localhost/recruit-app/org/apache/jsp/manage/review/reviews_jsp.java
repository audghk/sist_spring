/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-05 06:00:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.manage.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reviews_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/lib.jsp", out, false);
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("	$(function(){\n");
      out.write("    	$(\"#review_menu\").addClass(\"bg-gradient-primary\");\n");
      out.write("	});\n");
      out.write("\n");
      out.write("    // JSON 데이터를 파싱하여 테이블에 추가하는 함수\n");
      out.write("	function loadReviews(reviewListJson) {\n");
      out.write("	    const reviews = JSON.parse(reviewListJson);\n");
      out.write("	    const reviewListTable = document.querySelector('.list');\n");
      out.write("\n");
      out.write("	    reviewListTable.innerHTML = ''; // 기존 리스트 초기화\n");
      out.write("\n");
      out.write("	    reviews.forEach((review, index) => {\n");
      out.write("	        const row = document.createElement('tr');\n");
      out.write("	        \n");
      out.write("	        row.innerHTML = `\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${index + 1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.author}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.inputDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.recommend}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	            <td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${review.deleteFlag}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\n");
      out.write("	        `;\n");
      out.write("\n");
      out.write("	        reviewListTable.appendChild(row);\n");
      out.write("	    });\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// 페이지가 로드될 때 리뷰 리스트를 로드합니다.\n");
      out.write("	window.onload = function() {\n");
      out.write("	    const reviewListJson = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewListJson}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("	    loadReviews(reviewListJson);\n");
      out.write("	}\n");
      out.write("</script>\n");
      out.write("<!-- golgolz start -->		\n");
      out.write("\n");
      out.write("<link href=\"http://localhost//recruit-app/assets/css/pagenation.css\" rel=\"stylesheet\" />\n");
      out.write("<link href=\"http://localhost//recruit-app/assets/css/manage/order/admin.css\" rel=\"stylesheet\" />\n");
      out.write("<link href=\"http://localhost//recruit-app/assets/css/manage/order/reset.css\" rel=\"stylesheet\" />\n");
      out.write("<!-- golgolz end -->\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../assets/layout/admin/header.jsp", out, false);
      out.write("\n");
      out.write("	<main\n");
      out.write("		class=\"main-content position-relative max-height-vh-100 h-100 border-radius-lg ps ps--active-y\">\n");
      out.write("		<nav\n");
      out.write("			class=\"navbar navbar-main navbar-expand-lg px-0 mx-4 shadow-none border-radius-xl\"\n");
      out.write("			id=\"navbarBlur\" data-scroll=\"true\">\n");
      out.write("			<div class=\"container-fluid py-1 px-3\">\n");
      out.write("				<nav aria-label=\"breadcrumb\">\n");
      out.write("					<ol\n");
      out.write("						class=\"breadcrumb bg-transparent mb-0 pb-0 pt-1 px-0 me-sm-6 me-5\">\n");
      out.write("						<li class=\"breadcrumb-item text-sm\"><a\n");
      out.write("							class=\"opacity-5 text-dark\" href=\"javascript:;\">\n");
      out.write("							관리자 기능</a></li>\n");
      out.write("						<!-- 하단의 대시보드 텍스트를 본인 기능으로 변경 필요  -->\n");
      out.write("						<li class=\"breadcrumb-item text-sm text-dark active\"\n");
      out.write("							aria-current=\"page\">리뷰 관리</li>\n");
      out.write("					</ol>\n");
      out.write("					<h6 class=\"font-weight-bolder mb-0\">리뷰 관리</h5>\n");
      out.write("				</nav>\n");
      out.write("			</div>\n");
      out.write("		</nav>\n");
      out.write("	\n");
      out.write("	<div class=\"container-fluid\">\n");
      out.write("			<!-- golgolz start -->\n");
      out.write("			<div class=\"s_wrap\">\n");
      out.write("	<form name=\"fsearch\" id=\"fsearch\" method=\"get\" onsubmit=\"return handleFormSubmit(event);\" action=\"/manage/review/review.do\">\n");
      out.write("<input type=\"hidden\" name=\"code\" value=\"list\">\n");
      out.write("<div class=\"tbl_frm01\">\n");
      out.write("	<table>\n");
      out.write("	<colgroup>\n");
      out.write("		<col class=\"w100\">\n");
      out.write("		<col>\n");
      out.write("	</colgroup>\n");
      out.write("	<tbody>\n");
      out.write("	<tr>\n");
      out.write("		<th scope=\"row\">검색어</th>\n");
      out.write("		<td>\n");
      out.write("			<select name=\"sfl\">\n");
      out.write("				<option value=\"id\">아이디</option>\n");
      out.write("				<option value=\"name\">회원명</option>\n");
      out.write("				<option value=\"titleOrContent\">제목 또는 내용</option> <!-- 추가 -->\n");
      out.write("			</select>\n");
      out.write("			<input type=\"text\" name=\"stx\" value=\"\" class=\"frm_input\" size=\"30\">\n");
      out.write("		</td>\n");
      out.write("	</tr>\n");
      out.write("	\n");
      out.write("	</tbody>\n");
      out.write("	</table>\n");
      out.write("</div>\n");
      out.write("<div class=\"btn_confirm\">\n");
      out.write("	<input type=\"submit\" value=\"검색\" class=\"btn btn-secondary btn-sm\">\n");
      out.write("</div>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<div class=\"local_ov mart30\">\n");
      out.write("	총 리뷰 수 : <b class=\"fc_red\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewList.size()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</b>건\n");
      out.write("</div>\n");
      out.write("<div class=\"tbl_head01\">\n");
      out.write("	<table>\n");
      out.write("	<thead>\n");
      out.write("	 <tr>\n");
      out.write("                <th scope=\"col\" style=\"width: 50px;\">번호</th>\n");
      out.write("                <th scope=\"col\" style=\"width: 50px;\">아이디</th>\n");
      out.write("                <th scope=\"col\" style=\"width: 50px;\">작성자</th>\n");
      out.write("                <th scope=\"col\" style=\"width: 150px;\">제목</th>\n");
      out.write("                <th scope=\"col\" style=\"width: 130px;\">작성일</th>\n");
      out.write("                <th scope=\"col\" style=\"width: 60px;\">추천수</th>\n");
      out.write("                <th scope=\"col\" style=\"width: 60px;\">삭제여부</th>\n");
      out.write("            </tr>\n");
      out.write("	</thead>\n");
      out.write("	<tbody class=\"list\">\n");
      out.write("	<!-- 리뷰 리스트가 여기에서 동적으로 추가됩니다. -->\n");
      out.write("	</tbody>\n");
      out.write("	</table>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("	<!-- golgolz end -->\n");
      out.write("	</main>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
