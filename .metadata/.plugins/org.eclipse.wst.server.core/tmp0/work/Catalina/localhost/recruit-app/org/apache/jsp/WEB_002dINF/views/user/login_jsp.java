/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-07-14 09:35:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  public java.lang.String getServletInfo() {
    return "";
  }

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../assets/layout/user/lib.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- golgolz start -->\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<!-- 파비콘 -->\r\n");
      out.write("<link rel=\"shortcut icon\" href=\"https://static.wanted.co.kr/favicon/new/favicon.ico\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://localhost/recruit-app/assets/css/user_login.css\"/>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"http://localhost/recruit-app/assets/css/find_user_info.css\"/>\r\n");
      out.write("<!-- golgolz end -->\r\n");
      out.write("<style>\r\n");
      out.write("<!-- golgolz start -->\r\n");
      out.write("<!-- golgolz end-->\r\n");
      out.write("</style>\r\n");

	String resultMsg = (String)request.getAttribute("resultMsg");

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("		$(function(){\r\n");
      out.write("			<!-- golgolz start -->\r\n");
      out.write("			var emailInput = $('#email');\r\n");
      out.write("		    var passwordInput = $('input[name=\"password\"]');\r\n");
      out.write("		    var loginButton = $(\"#loginBtn\");\r\n");
      out.write("			\r\n");
      out.write("			$('#loginBtn').click(function(){\r\n");
      out.write("				chkInput = checkInputs();\r\n");
      out.write("				if(chkInput === true){\r\n");
      out.write("					login();\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			});\r\n");
      out.write("			\r\n");
      out.write("			// 회원가입 페이지 이동\r\n");
      out.write("			$('#signupBtn').click(function(){\r\n");
      out.write("				location.href='http://localhost/recruit-app/user/signupPage.do';\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("		    // 로그인 조건 충족 여부 확인 / 로그인 버튼 활성화, 비활성화\r\n");
      out.write("		    function checkInputs() {\r\n");
      out.write("		        var emailNotEmpty = emailInput.val().trim() !== '';\r\n");
      out.write("		        var passwordNotEmpty = passwordInput.val().trim() !== '';\r\n");
      out.write("		        var isValidateEmail = validateEmail();\r\n");
      out.write("		        var isValidatePass = validatePass();\r\n");
      out.write("\r\n");
      out.write("		        if (emailNotEmpty && passwordNotEmpty && isValidateEmail && isValidatePass) {\r\n");
      out.write("		            loginButton.prop('disabled', false); // 버튼 활성화\r\n");
      out.write("		            return true;\r\n");
      out.write("		        } else {\r\n");
      out.write("		            loginButton.prop('disabled', true);  // 버튼 비활성화\r\n");
      out.write("		            return false;\r\n");
      out.write("		        }\r\n");
      out.write("		    }\r\n");
      out.write("		    \r\n");
      out.write("		 	// 페이지 로드 시 초기 확인\r\n");
      out.write("		    checkInputs();\r\n");
      out.write("\r\n");
      out.write("		    // 입력 값 변경 시 이벤트 리스너\r\n");
      out.write("		    emailInput.on('input', checkInputs);\r\n");
      out.write("		    passwordInput.on('input', checkInputs);\r\n");
      out.write("		    \r\n");
      out.write("		    \r\n");
      out.write("		 	// 이메일 유효성 검증\r\n");
      out.write("		    function validateEmail() {\r\n");
      out.write("		    	  var email = emailInput.val().trim();\r\n");
      out.write("		    	  // 이메일 유효성 정규식\r\n");
      out.write("		    	  var emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,30}$/;\r\n");
      out.write("		    	  return emailRegex.test(email);\r\n");
      out.write("		    	}//function\r\n");
      out.write("		    \r\n");
      out.write("		     // 비밀번호 유효성 검증\r\n");
      out.write("		     function validatePass(){\r\n");
      out.write("		    	 var pass = passwordInput.val().trim();\r\n");
      out.write("		    	 // 비밀번호 유효성 정규식\r\n");
      out.write("		    	 var passRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[!@#$%^&*()-_=+])[a-zA-Z\\d!@#$%^&*()-_=+]{8,16}$/;\r\n");
      out.write("		    	 return passRegex.test(pass);\r\n");
      out.write("		    	}\r\n");
      out.write("		    \r\n");
      out.write("		     function login(){\r\n");
      out.write("		    	 	$(\"#loginFrm\").submit();\r\n");
      out.write("			    }\r\n");
      out.write("		    \r\n");
      out.write("			<!-- golgolz end -->\r\n");
      out.write("		});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"__next\" data-reactroot=\"\">\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../assets/layout/user/header.jsp", out, false);
      out.write("\r\n");
      out.write("		<main class=\"JobsFeed_Jobsfeed__DpeV9\">\r\n");
      out.write("			<section class=\"Section_Section__P1hhc\">\r\n");
      out.write("				<!-- golgolz start -->\r\n");
      out.write("							<div class=\"css-7qdx4z\">\r\n");
      out.write("								<div class=\"css-1ktsezg\">\r\n");
      out.write("									<div class=\"css-1nm9gyu\">\r\n");
      out.write("										<div class=\"css-oan6e\">\r\n");
      out.write("											<button type=\"button\" class=\"css-1krggrv\"></button>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"css-1iooy02\">\r\n");
      out.write("											<p data-testid=\"Typography\" color=\"#000000\"\r\n");
      out.write("												class=\"css-14qpgc6\">로그인</p>\r\n");
      out.write("										</div>\r\n");
      out.write("										<div class=\"css-1jxi7lq\"></div>\r\n");
      out.write("									</div>\r\n");
      out.write("									<div class=\"css-ng7qrx\">\r\n");
      out.write("										<form class=\"css-e130a2\" action=\"../user/login.do\" id=\"loginFrm\" method=\"post\">\r\n");
      out.write("											<div>\r\n");
      out.write("												<div class=\"css-14o8ny9\">\r\n");
      out.write("													<div class=\"css-cssveg\">\r\n");
      out.write("														<div class=\"css-env1z2\">\r\n");
      out.write("															<label data-testid=\"Typography\"\r\n");
      out.write("																color=\"rgba(55, 56, 60, 0.61)\" for=\"email\"\r\n");
      out.write("																class=\"css-afh7p0\">이메일</label>\r\n");
      out.write("														</div>\r\n");
      out.write("														<input type=\"email\" placeholder=\"이메일을 입력해주세요.\" id=\"email\"\r\n");
      out.write("															name=\"userId\" data-testid=\"Input_email\" autofocus=\"\"\r\n");
      out.write("															autocomplete=\"on\" class=\"css-1sbrczv\" value=\"\" maxlength=\"30\">\r\n");
      out.write("													</div>\r\n");
      out.write("												</div>\r\n");
      out.write("												<div class=\"css-1dxhdfz\">\r\n");
      out.write("													<div class=\"css-env1z2\">\r\n");
      out.write("														<label data-testid=\"Typography\"\r\n");
      out.write("															color=\"rgba(55, 56, 60, 0.61)\" for=\"password\"\r\n");
      out.write("															class=\"css-afh7p0\">비밀번호</label>\r\n");
      out.write("													</div>\r\n");
      out.write("													<input type=\"password\" placeholder=\"비밀번호를 입력해주세요.\"\r\n");
      out.write("														name=\"password\" data-testid=\"Input_password\"\r\n");
      out.write("														autocomplete=\"on\" class=\"css-1sbrczv\" value=\"\">\r\n");
      out.write("													<button type=\"button\" class=\"css-15fzn57\"></button>\r\n");
      out.write("												</div>\r\n");
      out.write("												");
 if(resultMsg != null){ 
      out.write("\r\n");
      out.write("												<div class=\"resultMsg\">\r\n");
      out.write("												<p style=\"font-size: 15px; color: red;\">");
      out.print( resultMsg );
      out.write("</p>\r\n");
      out.write("												</div>\r\n");
      out.write("												");
} 
      out.write("\r\n");
      out.write("												<button type=\"button\" data-testid=\"Button\"\r\n");
      out.write("													data-attribute-id=\"signup__email__login\" class=\"css-1yzn4b\" id=\"loginBtn\">\r\n");
      out.write("													<span data-testid=\"Typography\" color=\"#000000\"\r\n");
      out.write("														class=\"css-kfktv3\">로그인</span>\r\n");
      out.write("												</button>\r\n");
      out.write("											</div>\r\n");
      out.write("											<div class=\"css-z0tt1n\">\r\n");
      out.write("												<p data-testid=\"Typography\" color=\"#000000\"\r\n");
      out.write("													class=\"css-1q5pm8j\">또는</p>\r\n");
      out.write("												<div class=\"button-group\" style=\"margin-bottom: 80px;\">\r\n");
      out.write("													<button type=\"button\" class=\"css-1akojk6\" onclick=\"location.href='http://localhost/recruit-app/user/signupPage.do'\">\r\n");
      out.write("														<span data-testid=\"Typography\" color=\"#000000\"\r\n");
      out.write("															class=\"css-kfktv3\">\r\n");
      out.write("															<a href=\"http://localhost/recruit-app/user/signupPage.do\">회원가입</a></span>\r\n");
      out.write("													</button>\r\n");
      out.write("													<button type=\"button\" data-testid=\"Button\"\r\n");
      out.write("														class=\"css-zzrlz5\">\r\n");
      out.write("														<span data-testid=\"Typography\" color=\"#000000\"\r\n");
      out.write("															class=\"css-1nosfqs\">\r\n");
      out.write("															<a href=\"http://localhost/recruit-app/user/findMail.do\">계정 찾기</a></span>\r\n");
      out.write("													</button>\r\n");
      out.write("													<button type=\"button\" data-testid=\"Button\"\r\n");
      out.write("														class=\"css-zzrlz5\">\r\n");
      out.write("														<span data-testid=\"Typography\" color=\"#000000\"\r\n");
      out.write("															class=\"css-1nosfqs\">\r\n");
      out.write("															<a href=\"http://localhost/recruit-app/user/findPass.do\">비밀번호 찾기</a></span>\r\n");
      out.write("													</button>\r\n");
      out.write("												</div>\r\n");
      out.write("											</div>\r\n");
      out.write("										</form>\r\n");
      out.write("									</div>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						<footer class=\"css-1rhbhpi\"></footer>\r\n");
      out.write("				<!-- golgolz end -->\r\n");
      out.write("			</section>\r\n");
      out.write("		</main>\r\n");
      out.write("			");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../assets/layout/user/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
