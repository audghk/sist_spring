package kr.co.sist.admin.controller.notice;

import java.io.IOException;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import kr.co.sist.admin.service.notice.NoticeAdminService;
import kr.co.sist.admin.vo.notice.NoticeAdminVO;
import kr.co.sist.admin.vo.notice.SearchVO;

@Controller
public class NoticeAdminController {
    @Autowired(required=false)
    private NoticeAdminService noticeAdminService;
    
    @GetMapping("/manage/notice/notices.do")
    public String searchAllNotice(SearchVO sVO, Model model) {
        List<SearchVO> list=noticeAdminService.searchAllnotice(sVO);
        model.addAttribute("listNotice",list);
        return "manage/notice/notices";
    }
    @GetMapping("/manage/notice/noticeSearch.do")
    public String searchNotice(Model model) {
        return "";
    }
    @GetMapping("/manage/notice/noticesDetail.do")
    public String searchNoticeDetail(int noticeNum, HttpSession session, Model model) {
        List<SearchVO> list=noticeAdminService.searchNoticeDetail(noticeNum);
        
        session.setAttribute("noticeNum", noticeNum);
        
        model.addAttribute("noticeDetail",list);
        
        return "manage/notice/notices_detail";
    }
    @GetMapping("/manage/notice/noticesWrite.do")
    public String insertNoticePage() {
        
        return "manage/notice/notices_write";
    }
    @PostMapping("/manage/notice/noticesInsert.do")
    public String insertNotice(NoticeAdminVO nVO, HttpServletRequest request) throws IOException {
        int nextNoticeNum=noticeAdminService.searchNextNoticeNum();
        String category= request.getParameter("hidCategory");
        String title = request.getParameter("hidTitle");
        String content = request.getParameter("hidContent");

        System.out.println("================Received data================");
        System.out.println("noticeNum: " + nextNoticeNum);
        System.out.println("category: " + category);
        System.out.println("title: " + title);
        System.out.println("content: " + content);
        
        nVO.setNoticeNum(nextNoticeNum);
        nVO.setCategory(category);
        nVO.setTitle(title);
        nVO.setContent(content);

        noticeAdminService.addNotice(nVO);

        return "redirect:/manage/notice/notices.do?noticeNum=" + noticeNum;
    }
    @GetMapping("/manage/notice/noticesUpdate.do")
    public String updateNotice(Model model) {
        return "manage/notice/notices_update";
    }
    @GetMapping("/manage/notice/noticesDelete.do")
    public String deleteNotice(Model model) {
        return "";
    }
    
}
